let searchIndex = {"pages": [
{"id":"0", "title": "404 ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   4-oh-no-4! &#x1F628; This link is busted. Maybe these will help? You can see search results for it below.  Search &lt;svg vf-icon vf-icon--search-btn | vf-button__icon aria-hidden= true xmlns= http://www.w3.org/2000/svg version= 1.1 xmlns:xlink= http://www.w3.org/1999/xlink xmlns:svgjs= http://svgjs.com/svgjs viewBox= 0 0 140 140 width= 140 height= 140 &gt;&lt;g transform= matrix(5.833333333333333,0,0,5.833333333333333,0,0) &gt;&lt;path d= M23.414,20.591l-4.645-4.645a10.256,10.256,0,1,0-2.828,2.829l4.645,4.644a2.025,2.025,0,0,0,2.828,0A2,2,0,0,0,23.414,20.591ZM10.25,3.005A7.25,7.25,0,1,1,3,10.255,7.258,7.258,0,0,1,10.25,3.005Z fill= #FFFFFF stroke= none stroke-linecap= round stroke-linejoin= round stroke-width= 0 &gt;&lt;/path&gt;&lt;/g&gt;&lt;/svg&gt; &lt;/button&gt;&lt;/div&gt;  Loading... window.onload = function () { vfSearchClientSide(); }; // pre-populate the search with the query string var truncatedUrl = window.location.pathname.replace(&apos;.html&apos;,&apos;&apos;).replace(&apos;components/detail/&apos;,&apos;&apos;).replace(&apos;/&apos;,&apos; &apos;); document.getElementById(&apos;search&apos;).value = truncatedUrl;   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/404.html"},
{"id":"1", "title": "Hello ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Hello. I am Ken Hawkins. I bring structure and process to complex web projects. With 20 years experience in publishing and technology, I help projects move beyond content and problems into performant web platforms that deliver organisational goals. Recently 23 Dec 2021   Something new for 2022  12 Dec 2020   Using Nunjucks templates with React  11 Nov 2020   Lerna monorepos with fewer tags  Read 21 more posts on the blog &#x21A6; Say hello I&apos;m currently fully engaged, helping a global leader reduce the risk of disaster &#x2014; but you can still say hello.  Twitter @khawkins98 &#xA0; &#xA0; LinkedIn &#xA0; &#xA0; khawkins98@gmail.com &#xA0; &#xA0; Beer RSS (Instant updates with the hottest tech from 20 years ago)  ", "tags": "", "url": "/index.html"},
{"id":"2", "title": "The blog ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   The blog  23 Dec 2021  Something new for 2022 This month, I&#x2019;m saying goodbye to my projects at EMBL but my career in web work continues. 12 Dec 2020  Using Nunjucks templates with React A lightweight React wrapper with precompiled Nunjucks 11 Nov 2020  Lerna monorepos with fewer tags Getting the perks of monorepo publishing while curating our git tags and release notes. 13 Jul 2020  Moving from Panini to Eleventy Back in February 2018, I wrote about updating this site to use a static-site generator by Zurb (makers of the Foundation Framework) called Panini. 8 Feb 2020  Publishing since the 2000s In a career of 20 years, the more things change the more they stay the same. 18 Nov 2019  Building your first page with the Visual Framework 2.0 A quick start on how to work with Visual Framework 2.0 CSS, JS and structure your HTML &#x2014; and lots of links to learn more. 12 Nov 2019  Fractal and Eleventy: Getting static sites closer to the design system For the Visual Framework 2.0 component system we recommend Eleventy for static sites: Eleventy sites get direct access to component templates with associated metadata and a focused component library. 21 Oct 2019  Integrating Eleventy with gulp, upstream JS Eleventy notes that it, works great with data &#x2014; use both front matter and external data files but the static site generator stops short of working well with upstream in-memory data objects for local development. 29 Mar 2018  Inside the Content-Action Model An ontology to document, plan, define and implement CAM magic. 19 Mar 2018  What if: A web font for data Alphanumeric data works well for programmatic query, but less so for direct human consumption. What if a font was designed specifically with life sciences data in mind? 10 Feb 2018  Migrating to Zurb Panini 2.0 Not yet stable yet, but has some compelling features. 7 Feb 2018  UX, discovery, analysis + the CAM What does it mean to &apos;do UX&apos; with our Content Action Model? Beyond the buzz. 22 Jan 2018  The Content-Action Model origin story Beyond the Core Content Model and into organisations, actions. 22 Jan 2018  Introducing the Content-Action Model for Web Systems Wiring &#x2018;ugly truth&#x2019; UX diagnostics for better web strategy &amp; IA. 12 Nov 2017  Comparing IBM Plex and Fira Sans Here&apos;s a quick comparison between, Plex, Helvetica, Fira and a couple of other stand-ins. 27 Oct 2017  8 Video conferencing tips, dos, don&#x2019;ts While most any video platform and kit can work great for one-to-one video calls, I&apos;ll share lessons learnt in my previous roles and during my time in EMBL-EBI&apos;s Web Development team. 6 Oct 2017  Five highlights from EuroIA 2017 I&apos;ll tragically ignore Stockholm and highlight inclusion, embracing and enabling. 13 Sep 2017  Fluid IA to enable user discovery, prepare for change Subtitled: Resisting entropy and preparing for change by binding content to mission. 25 Jul 2017  A new site for little reason As is apt for us web types, on 25 July 2017 I gave a reboot to this website. 23 Jul 2017  Better corporate design through information architecture Using &apos;brand archetecture&apos; at the heart of identitity design. 7 Apr 2014  UX success story: Doubling conversion rates, sales The results were immediate: the site launched in the fall shopping season and saw a doubling of conversion rates from visitors &#x2014; compared to both the previous months and previous fall sales &#x2014; and that pace has held strong. 8 Dec 2013  A model for better content, better readers, better journalism Six years ago my then roommate and I founded TheDigitel on the idea that the future of news was changing and that the service was in curating and linking content, and that curation was going to be bigger than the massive link mills then in existence. 12 Jun 2013  Muliple IPs on an Ubuntu EC2 VPC? Yes, please! How to configure a second ethernet adapter on an Ubuntu EC2 VPC instance. 21 Mar 2013  Cutting down on Postfix spam relaying Postfix, it&apos;s used with many a LAMP stack to send out messages from a site, unfortunately it&apos;s prone to relaying many spam messages out of the box.   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/blog/index.html"},
{"id":"3", "title": "Ken Hawkins&#39; CV ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn  Ken Hawkins&apos; CV &#x1F4E7;&#xA0; khawkins98@gmail.com &#xA0;&#x1F426;&#xA0; @khawkins98 &#xA0;&#x1F30E;&#xA0; AllAboutKen.com &#xA0;&#x1F4C7;&#xA0; Online problem solver  Ken Hawkins. Ken Hawkins. Web front end lead.  I empathise with people and organisations to help deliver the potential of the web. With developer outreach and content modelling, I work to understand the root cause. Web front end lead Since 2015 I&apos;ve been helping EMBL make a better front end toolkit for life-science websites. My work is used by more than 250 developers at EMBL across a range of systems from Angular to React, to static sites and CMSs like WordPress and Drupal. My most-frequent tools are CSS (Sass), JavaScript, Eleventy, Lerna, npm, component systems and writing lots of documentation. I seek out challenges of efficiency and communication. Professional experience Web expertise Rich understanding of HTML and CSS fundamentals CSS (Dart Sass), JavaScript (typically vanilla modules for portability), a component system (Fractal+Gulp+JS modules), distributing (npm+lerna+yarn) and cross-wiring into a system (Eleventy+Nunjucks) Component and design system expertise Managing geographically distributed projects with GitLab, GitHub, Kanban, Slack and the similar Strong content experience: Drupal configuration and development, Eleventy, WordPress, metrics and so on  Structure Maximising content for discoverability and context-aware content Storytelling through visualisations Utilising social media as a tool for content creation, collaboration Tooling abstraction for content editors  Leadership Governance through triangulating content, actions and goals Developer outreach and mentorship Stakeholder consultation and expectation management through roadmaps Feature prioritisation and sprint-based project planning Training and fostering web content creation from the general public to experienced developers Professional work history Web Front End Lead European Molecular Biology Laboratory (EMBL) June 2018 &#x2013; ongoing Heidelberg, Germany EMBL is Europe&#x2019;s flagship laboratory for the life sciences and employs hundreds of developers to deliver online scientific services. We&apos;ve created reusable front-end tooling to speed development, reduce cost and improve UX. It&apos;s been especially interesting for the breadth of technology and wide range of user needs and developer backgrounds. I lead the creation of this tooling, the Visual Framework, and serve as its lead advocate to help developers and product designers to utilise and implement. I also ensure the Visual Framework adapts to those needs. This is an expansion of my role for the European Bioinformatics Institute (EMBL-EBI). Grow, evolve legacy projects into pan-EMBL solutions Sass, Nunjucks, Lerna, Fractal, npm, yarn, eleventy, component systems and many more Information architecture and component tooling for EMBL web content, design systems Architect abstracted web content platform, navigation Facilitate collaboration between UX, developers and content teams Foster design system growth, adoption by coordinating with development leads Related writing Fractal and Eleventy: Getting static sites closer to the design system Faster scientific websites through reusability Unshackling content, and their authors Major technical tooling and processes: HTML/JS/CSS, Sass, GitHub, GitLab CI, Visual Studio Code, Google Analytics, Gulp, npm, Eleventy, Fractal, Drupal, Continuous integration, Kanban Web design architect European Bioinformatics Institute (EMBL-EBI) July 2015 &#x2013; June 2018 Cambridge, UK Lead information architecture and design tooling for EMBL-EBI web content, design systems Facilitate collaboration between UX, developers and content teams Foster design system growth, adoption by coordinating with development leads Drive for reusable patterns in web interfaces Close gap between web analytics and content effectiveness Improve intranet information architecture to focus on user activities Related writing The EMBL Triangle Key: From brand structure to information architecture Mapping brand structure to support communication Introducing the Content-Action Model for Web Systems Major technical tooling and processes: Content modelling and architecture, HTML/JS/CSS, Sass, Adobe Creative Suite, Atom, MapBox, Google Analytics, GitHub, Gulp, npm, Jekyll, Foundation Framework, Drupal, Travis, Continuous integration, Kanban Web developer and information designer DRS Technical Solutions February 2011 &#x2013; June 2015 Stuttgart, Germany Manage user-focused efforts (UX, research, metrics) for company web projects Website project lead for a Drupal platform to support more than 150,000 user accounts, provide e-commerce tools Information architecture and infographics for business proposals, strategic planning Numerous intranet-style websites to manage contacts, resumes, documents by consuming JSON and XML feeds for custom dashboards and processing Create and implement software projects with multi-company team members in the U.S., Europe and Middle East Major technical tooling: Drupal, HTML, CSS, JavaScript, Bitbucket, Agile, Amazon EC2, Route 53, Google Analytics Technical and editorial lead TheDigitel May 2008 &#x2013; February 2011 South Carolina, USA I co-founded TheDigitel.com way back in 2009 to help advance newspaper methodology in the age of websites. This broke down barriers in collaborating with the public and created a more efficient and highly-networked data model of hyperlocal news. Lead team of eight staff and an array of freelancers and volunteers to report, market and implement web features Lead community editor outreach with physical, online, podcast events Help our students grow through our intern partnership with the local college Pioneer use of Twitter hashtags for local media community reporting Dynamic Advertising: a new advertising model powered by social media Speak at events for the creative community about code, reporting, startups Refine Drupal UX, content editing experience for community collaboration with staff editors Raise funding, manage investors, expand TheDigitel to three cities Major technical tooling: HTML, CSS, JavaScript, Drupal, LAMP hosting optimisation, daily briefing newsletter automations, reverse proxy caching, Adobe Creative Suite, Google Analytics, Google G Suite admin, A/B testing, Google AdSense and AdWords, podcasting Graphics reporter The Post and Courier March 2006 - May 2008 South Carolina, USA Newspaper infographic design and reporting Produce daily deadline-driven information graphics based on news reports Create interactive HTML and Flash information graphics for the Web Process geographic data to create maps (GIS) Design and produce newspaper pages Photo management and copy editing Major technical tooling: Adobe Illustrator, Photoshop, InDesign, Acrobat, QuarkXPress, Flash, ArcGIS, Modo 3D modelling, HTML, CSS, JavaScript, Mac OS Graphics reporter The Beaufort Gazette May 2003 - March 2006 South Carolina, USA Newspaper infographic and page design Produce daily deadline-driven information graphics based on news reports Help lead the visual design of newspaper pages Work to educate staff on photo cropping, type kerning, general principles of visual structure and directing the reader&apos;s focus Major technical tooling: Adobe Illustrator, Photoshop, InDesign, Acrobat, QuarkXPress, Mac OS Production manager The Daily Journal May 2000 - April 2003 South Carolina, USA Newspaper pre-press production, advertising Pre-flight and technical management of daily newspaper pre-press production Lead production of in-house creatives for advertising clients Manage pre-press team of 4 individuals Major technical tooling: Adobe Illustrator, Photoshop, Acrobat, QuarkXPress, Mac OS Education, speaking Clemson University, Bachelor of Science in Graphic Communications, May 2003 Charleston Drupal meet-up and co-working Co-founder of Fuse843 networking and business development group Charleston PechaKucha, Charleston Drupal user group, Create South conference, Startup Stuttgart, various others &#x1F4E7;&#xA0; khawkins98@gmail.com &#xA0;&#x1F426;&#xA0; @khawkins98 &#xA0;&#x1F30E;&#xA0; AllAboutKen.com &#xA0;&#x1F4C7;&#xA0; Online problem solver   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/cv/index.html"},
{"id":"4", "title": "Impressum ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Impressum 22 Aug 2018   Ken Hawkins Cambridge UK Tel.: 0044 (0) 7479852789 E-Mail.: khawkins98@gmail.com   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more   &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/impressum/index.html"},
{"id":"5", "title": "null ", "text": "null ", "tags": "", "url": "/node/20.html"},
{"id":"6", "title": "null ", "text": "null ", "tags": "", "url": "/node/21.html"},
{"id":"7", "title": "null ", "text": "null ", "tags": "", "url": "/node/22.html"},
{"id":"8", "title": "null ", "text": "null ", "tags": "", "url": "/node/24.html"},
{"id":"9", "title": "null ", "text": "null ", "tags": "", "url": "/node/32.html"},
{"id":"10", "title": "Offline! ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Offline! 22 Aug 2018   Oh noes   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more   &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/offline/index.html"},
{"id":"11", "title": "Cutting down on Postfix spam relaying ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Cutting down on Postfix spam relaying 21 Mar 2013 Image credit: Flickr user Alan Levine  Postfix, it&apos;s used with many a LAMP stack to send out messages from a site, unfortunately it&apos;s prone to relaying many spam messages out of the box.  The below code can be easily appended to Postfix&apos;s main.cf to drastically reduce the authorization hole. On Ubuntu you&apos;ll find the file at /etc/postfix/main.cf smtpd_helo_required = yes strict_rfc821_envelopes = yes disable_vrfy_command = yes unknown_address_reject_code = 554 unknown_hostname_reject_code = 554 unknown_client_reject_code = 554 smtpd_helo_restrictions = permit_mynetworks, reject_invalid_hostname, permit smtpd_recipient_restrictions = check_client_access hash:/etc/postfix/helo_client_exceptions check_sender_access hash:/etc/postfix/sender_checks, reject_invalid_hostname, reject_non_fqdn_hostname, reject_non_fqdn_sender, reject_non_fqdn_recipient, reject_unknown_sender_domain, reject_unknown_recipient_domain, permit_mynetworks, reject_unauth_destination, reject_rbl_client cbl.abuseat.org, reject_rbl_client sbl-xbl.spamhaus.org, reject_rbl_client bl.spamcop.net, reject_rhsbl_sender dsn.rfc-ignorant.org, permit Then restart postfix: /etc/init.d/postfix restart A couple of other handy commands: - Check the mail queue with mailq - Empty the queue with postsuper -d ALL   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more   Next: Muliple IPs on an Ubuntu EC2 VPC? Yes, please!  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20130321-postfix-spam.html"},
{"id":"12", "title": "Muliple IPs on an Ubuntu EC2 VPC? Yes, please! ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Muliple IPs on an Ubuntu EC2 VPC? Yes, please! 12 Jun 2013 Image credit: Flickr user Andreas Beer  How to configure a second ethernet adapter on an Ubuntu EC2 VPC instance.  If you&apos;re wanting to have multiple valid SSL certificates for many domains (say, for Drupal a multisite running on Aegir) on a single EC2 instance you&apos;ll, of course, need multiple IP addresses. While Amazon&apos;s VPC offerings seem like an easy win there are a few twists to get the server to respond to that second internal IP. Here are my notes, hopefully they&apos;ll be of some use to you. You might not need to do all of these, but I&apos;ve found things to work better this way. These steps were used on Ubuntu 12.04 in June 2012 &#x2014; things can change. Get set up: Have one unique internal IP address (10.0.0.70, 10.0.0.80, etc) per network adapter Map the Elastic IP addresses to your internal IP I&apos;m running Aegir and needed to map the Apache server not to the public IP used for the domain name, but the private internal IP address Once you&apos;ve done the the above, you&apos;ll likely find the server working fine on the first IP address but not responding on the second. Here&apos;s what to do next: In the Amazon VPC Route Table console ensure you have a route entry for 0.0.0.0/0 using your IGW (this will look like igw-xxxxxx) SSH into your server If not root: sudo su - root Initialize your secondary ethernet interface (don&apos;t do this for eth0) ifconfig eth1 10.0.0.YOURIPHERE netmask 255.255.255.0 Set up your interfaces vi /etc/network/interfaces For each adapter add (changing 1 for your adapter) auto eth1 iface eth1 inet dhcp Start each adapter ifup eth1 We should be able to ifconfig and see the ethernet adapters up Reboot init 6 SSH into your server, become root For each ethernet adapter follow this pattern: ip route add default via 10.0.0.1 dev eth0 tab 1 ip route add default via 10.0.0.1 dev eth1 tab 2 Similarly: ip rule add from 10.0.0.170/32 tab 1 priority 500 ip rule add from 10.0.0.190/32 tab 2 priority 600 Almost done Good news is it works at this point, bad news is the ip routes and rules won&apos;t survive a reboot. Let&apos;s make changes survive a reboot: Return to vi /etc/network/interfaces; our file should look like: # The loopback network interface auto lo iface lo inet loopback # The primary network interface auto eth0 iface eth0 inet dhcp auto eth1 iface eth1 inet dhcp We modify the above, adding in the ip route and ip rule commands from before, but prefixing them with post-up , like so: # The loopback network interface auto lo iface lo inet loopback # The primary network interface auto eth0 iface eth0 inet dhcp post-up ip route add default via 10.0.0.1 dev eth0 tab 1 post-up ip rule add from 10.0.0.170/32 tab 1 priority 500 auto eth1 iface eth1 inet dhcp post-up ip route add default via 10.0.0.1 dev eth1 tab 2 post-up ip rule add from 10.0.0.190/32 tab 2 priority 600 Now reboot /etc/init.d/networking restart All set! Related reading and things that helped me: AWS Forums: Unable to connect to EC2 instance in VPC Getting ip rules and routes to work on reboot: Ubuntu Linux Add Static Route Video on EC2 VPC multiple IP basics: How to add extra IP addresses on one EC2 Instance   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Cutting down on Postfix spam relaying  Next: A model for better content, better readers, better journalism  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20130612-ubuntu-ips-ec2-multiple.html"},
{"id":"13", "title": "A model for better content, better readers, better journalism ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   A model for better content, better readers, better journalism 8 Dec 2013 Image credit: Flickr user J E Smith  Six years ago my then roommate and I founded TheDigitel on the idea that the future of news was changing and that the service was in curating and linking content, and that curation was going to be bigger than the massive link mills then in existence. We were right, but failed to realize that social radius service like Facebook, Google+, Twitter, and the like would organically become almost zero cost curators. But hindsight quickly made something else more clear: The market was driving low-cost content that was appealing to low interest readers, and there was oft little reason to click through a blog post or Facebook share to the source material. This scarcity of quality will in turn, likely, drive a desire for premium grade content. If today&apos;s shell of journalism is akin to leaflets, there would in turn be a demand for well researched writing, more akin to scientific journal content. Last week a new online-only publication, The Information, announced its arrival: The Information, launching today, is our first step towards building a publication that operates differently. We&#x2019;re a team of reporters and editors who have learned from the best in the business, and we want to challenge ourselves to write better articles that break new ground. Period. The publication is a premium, $39 per month subscription-only one. I think the idea is spot on, and if it can hold it will be one of a series of events that could drive a far better journalism market. Not only will we be able to fund real journalism, but the readers of such content will be looking for more well reasoned writing and that&apos;s something that should help stop publications from pandering to attention grabbing headlines that belong more in tabloids of yesteryear. If we were to start TheDigitel in 2013, this is the direction we would have pushed.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Muliple IPs on an Ubuntu EC2 VPC? Yes, please!  Next: UX success story: Doubling conversion rates, sales  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20131208-content-model-better-journalism.html"},
{"id":"14", "title": "UX success story: Doubling conversion rates, sales ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   UX success story: Doubling conversion rates, sales 7 Apr 2014 The English Tearoom in Stuttgart, Germany, is a top-notch independent store.  The results were immediate: the site launched in the fall shopping season and saw a doubling of conversion rates from visitors &#x2014; compared to both the previous months and previous fall sales &#x2014; and that pace has held strong.  Open since 2011, owners Lynn and Christian offer superb tea and tea-related goods, with service mindful of each customer&apos;s unique tastes. This focus on in-person service hasn&apos;t prevented the owners from using e-commerce to attract new customers and offer more services to existing ones. But when the online-store first arrived in 2012 it struggled to find a fully effective engagement for similar-yet-different audiences. The need is to present the shop as a true brick-and-mortar experience with real human service and as an online store with doorstep service throughout Europe. Aiming to better deliver both messages, I worked with The English Tearoom in the summer and fall of 2013 to help them better integrate their online offerings while preserving &#x2014; and enhancing &#x2014; the marketing of The English Tearoom&apos;s physical location. My work focused on improving the homepage; refinements to deeper regions of the site and mobile user targeting are pending. I started by asking the owners what it was they needed out of the homepage, then devising the personas that would be likely to visit the online page and sort out their various needs. The new design works by first targeting the common needs amongst all user groups: What is The English Tearoom, and what have they been up to? and then presents engaging items from the shop&apos;s location and hours to hot new items or discounts available both online and in the shop. Further down the page more nuanced needs are met, from newsletter information to product categories. The results were immediate: the site launched in the fall shopping season and saw a doubling of conversion rates from visitors &#x2014; compared to both the previous months and previous fall sales &#x2014; and that pace has held strong (through early April as of this writing). Equally encouraging, the average checkout value remained constant for an effective doubling in sales. The conversion rate graphed (Number values have not been labeled as to protect proprietary client information.) Of The English Tearoom&apos;s top months online, six of the seven have come after the UX updates. The message is clear. Bonus: We also were able to use the redesign chance to better connect online viewers with information about the physical shop location. By visitor accounts, we&apos;ve managed to maintain or increase in-shop referrals from website visits. Client information: - Location: Stuttgart, Germany - Website platform: Drupal 6 - E-commerce solution: Ubercart - Languages: English, German - Timeframe: September to October 2013 - Services provided: UX analysis, user profiles, composite renderings (Photoshop, Illustrator, OmniGraffle), development (CSS, HTML, JS/jQuery, PHP), usability and automated testing Image credit: Photoshop composite; Base image by Robert S. Donovan   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: A model for better content, better readers, better journalism  Next: Better corporate design through information architecture  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20140407-ux-success-double-conversion.html"},
{"id":"15", "title": "How to install Lyra the graphical visualization environment ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   How to install Lyra the graphical visualization environment 28 Jan 2015 Lyra is, in my view, a proof of concept for developing rich D3-powered information display with a browser GUI.  Lyra is, in my view, a proof of concept for developing rich D3-powered information display with a browser GUI.  Think of it as better than Excel and only 30% more complicated. There&apos;s an online demo here, but if you want to set up a sandbox, here&apos;s how. It&apos;s brought to you as free and open source software (their words) by the University of Washington Interactive Data Lab. 1) Set up your own micro Linux environment A 512MB Debian 7 environment should be fine. 2) Login as root (or sudo su - root) and install your basics apt-get update apt-get upgrade apt-get install curl curl -sL https://deb.nodesource.com/setup | bash - apt-get install -y nodejs apt-get install -y build-essential npm install -g yo bower grunt-cli gulp 3) Get Lyra (make a note of which folder to which you&apos;re installing, the default home directory should be fine for a playground) wget https://github.com/uwdata/lyra/archive/master.zip unzip master.zip cd lyra-master/ npm install 4) Run it cd src python -m SimpleHTTPServer 1234 Now got to https://you.ip.address.here:1234   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more   &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20150128-lyra-installation.html"},
{"id":"16", "title": "Better corporate design through information architecture ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Better corporate design through information architecture 23 Jul 2017 A leader in the lifesciences and advancing the skills of those in the field, EMBL (my current employer) is not only a fantastic place to work, but just plain impressive.  Using &apos;brand archetecture&apos; at the heart of identitity design.  The current projection of that brand does not measure up to EMBL&apos;s place in its community. Kicking off our recent Corportate Design Sprint 1 , Tabea Rauscher (an EMBL colleague) wrote about the entropy that was eating away at EMBL&apos;s perception: For example, services are part of the core mission of the organisation but currently they exist at the outer &#x2018;disassociated&#x2019; layer of our brand map. The net effect of this is that many users of these services will be unaware that they are supported by EMBL (perhaps even what EMBL is), and will not know the full breadth of services on offer by EMBL. EMBL simply isn&apos;t coming through as a coherent idea amongst it&apos;s nearly 2,000 staff and six sites across Europe. That fragmentation was manifesting itself in visual design and writing, but the problem is rooted in a deeper perception of how EMBL self categorises its purpose. Simply put we fell victim to the classic problem of naming things around internal structure and not for what they are. Having introduced the topic, here&apos;s where I hand you off to how we distilled the problem and have begun formulating a solution by architecting out what EMBL does, who is involved and where they are. Part 1: Diagnosis With the &#x2018;structure map&#x2019; we see EMBL&#x2019;s intent more clearly: What: The magenta stickies about the activities EMBL provides and facilitates Where: The yellow stickies of the six EMBL sites Who: The people, groups, teams and services that make up EMBL This is a first look at the shared truths of the pan-EMBL structure &#x2014; the model isn&#x2019;t finished, but we&#x2019;re a lot closer (we still need to account for how these relate to each other and how importance varies across user types) but this is a defensible look at the structure EMBL uses to achieve its mission. Read Mapping brand structure to support communication Part 2: Architecting a holistic solution Using Who, What and Where as facets in all content allows use across all EMBL websites. These facets may not be shown in every view of content, but their capturing as content metadata allows us to pivot, mold and transform content. This holistic approach yields continuity and keeps content true to EMBL and user needs. Read The EMBL Triangle Key: From brand structure to information architecture Part 3: Implementation UPDATE 2017-09-13: [We&apos;ve been working on implementing this model, read the update](/posts/20170913-fluid-information-architecture.html). We&apos;re not here just yet, but during 2017 we&apos;ll be working to take this concept from architecture to implementatble navigation and layout patterns. Check back on this blog around mid-September for more &#x2014; you could also get the RSS feed or follow me on Twitter @khawkins98. &#x270F;&#xFE0E; Bonus: A post on the naming of things.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: UX success story: Doubling conversion rates, sales  Next: A new site for little reason  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20170723-corporate-design-through-ia.html"},
{"id":"17", "title": "A new site for little reason ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   A new site for little reason 25 Jul 2017  As is apt for us web types, on 25 July 2017 I gave a reboot to this website.  Why? The content was slightly outdated and I was keen to move it from a Drupal-powered site to a Gulp powered site. Why move from Drupal to a static site when I&apos;m just working with simple content? That&apos;s exactly why.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Better corporate design through information architecture  Next: Fluid IA to enable user discovery, prepare for change  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20170725-site-update.html"},
{"id":"18", "title": "Fluid IA to enable user discovery, prepare for change ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Fluid IA to enable user discovery, prepare for change 13 Sep 2017 Organised, yes, but not useful to non-domain experts.  Subtitled: Resisting entropy and preparing for change by binding content to mission.  As Web Design Architect at EMBL (The European Molecular Biology Laboratory), I&apos;ve been helping a team in its efforts to better understand the structure of the organisation and how we can utilise information architecture to facilitate interconnectivity and reusability of content. It&apos;s an issue that isn&apos;t unique to EMBL. Robust information architecture can help organisations ease content access and make their own internal structure more obvious. But exposing too much of the architecture&apos;s structure and facets can confuse non-expert users with information superfluous to their use case. A snapshot of the major IA facets utilised within EMBL. After engaging with content in one domain (green circle), we need to facilitate navigation paths within the Who, What, Where pyramid. For more background read this. Exposed complexity creates confusion, not complexity itself. We should strive for a rich system that gradually exposes functionality to be learned as a service is utilised. We see some lessons in the common kitchen knife: a knife has many ways it can be utilised but advanced functionality of the object is dependent on the skill of the user &#x2014; advanced uses do not obstruct the most basic uses. Passive enabling &apos;pro&apos; features If you&apos;re reading this blog, you&apos;ve likely logged a few hundred hours on computers and have learned shortcuts like `&#x2318;+s` and `ctrl+s`. Computer shortcuts can be discovered in-context. Knowledge of these keyboard shortcuts to save a document is not required to use your Mac or Windows computer, but the shortcuts are passively, persistently and consistently indicated across the operating system menus, this allows it to be learned as a value add over time. It&apos;s an osmotic process that comes without reading a detailed operating manual. This architecture offers an easy and transparent learning curve, and one we can seek to echo in the exposing of IA in web interfaces. To be clear, this does not mean we should go about adding keyboard shortcuts to our web interfaces (though keyboard accessibility is very important), rather we should have a seemingly simple, low-friction interface that exposes tricks and tips passively the more we use it. Shortcuts: Terribly useful but not required You might not see it the first time, but when you discover these optional paths they offer new gateways of discovery. We&apos;ve been working to better understand EMBL&apos;s architecture and have seen evidence that users descend into content silos with fixed and limited contexts, muting other voices and personas of EMBL. For some users this is fine if they seek to discover an endpoint of information and once they have arrived at their destination they leave satisfied. But for repeat users &#x2014; including staff &#x2014; this view creates a siloed perspective of the organisation. The existing page structure and faceting exclusively looks inward into geographic-based facets, there&apos;s no ability to shift context upwards. For example this scenario is currently not possible through fewer than five clicks: I&apos;m viewing a team in Rome about research, but instead wish to see a research team in Hamburg in the same research field. A siloed view of the of our content pyramid from the top of this article. If this was paths in a field, someone would traipse over lawn as a shortcut across these information silos. Fighting against these silos, a user&apos;s curiosity compells them to backtrack up an information channel and then descend a seperate silo. It&apos;s a doubly perilous situation when your staff already functions across six geographically distinct areas. Experience the pain yourself Find an easy path from an EMBL Rome research group to an EMBL Heidelberg research group. Build it with flexible facets These facet shortcuts are driven by document metatags specified in our information architecture, creating a more holistic discipline of structure relationships within documents. [site]:Homepage &lt;meta name= ebi:facet-who content= inactive data-tag= null /&gt; &lt;meta name= ebi:facet-what content= child data-tag= * /&gt; &lt;meta name= ebi:facet-where content= primary data-tag= [site] /&gt; EMBL.org:[Person] &lt;meta name= ebi:facet-who content= primary data-tag= [person] /&gt; &lt;meta name= ebi:facet-what content= child data-tag= * /&gt; &lt;meta name= ebi:facet-where content= child data-tag= * /&gt; EMBL.org:Research &lt;meta name= ebi:facet-who content= child data-tag= * /&gt; &lt;meta name= ebi:facet-what content= primary data-tag= Research /&gt; &lt;meta name= ebi:facet-where content= parent data-tag= EMBL.org /&gt; EMBL.org:Research:[group] &lt;meta name= ebi:facet-who content= primary data-tag= [group] /&gt; &lt;meta name= ebi:facet-what content= parent data-tag= Research /&gt; &lt;meta name= ebi:facet-where content= parent data-tag= EMBL.org /&gt; This metadata tethers content independent of placement, and affixes it to the organisation&apos;s core facets (who, what, where). A tether as firm as the organisation&apos;s mission. Our breadcumbs to the future.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: A new site for little reason  Next: Five highlights from EuroIA 2017  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20170913-fluid-information-architecture.html"},
{"id":"19", "title": "Five highlights from EuroIA 2017 ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Five highlights from EuroIA 2017 6 Oct 2017 300 professionals from 30 countries attended the 13th summit.  I&apos;ll tragically ignore Stockholm and highlight inclusion, embracing and enabling.  This year&apos;s installment of Europe&apos;s best information architecture gathering was my second visit. I was happy to have a similar takeaway: EuroIA has been a great way to check my perspectives, infuse them with the views of others and step back, dwell on the point of all this. I was fortunate enough to be one of three staffers from EMBL-EBI &#x2014; and one of two with the Web Development team &#x2014; to attend this year&apos;s Euro IA conference in Stockholm, and aside from the general fantastic food, views and culture of Sweden and Stockholm, here&apos;s a sprinkling of personal highlights from EuroIA. Colouring my notes is that this year was also an opportunity to dwell on ideas we&apos;ve been discussing in the EMBL Corporate Design Sprints, particularly those around a pan-organisation IA. At any rate, onto my highlights: 1. Keep it flexible, be an enabler The @euroia keynote reaffirms work on @embl &apos;s information structure: enabling possibilities, flexibility, iteration #euroia17 pic.twitter.com/Qhel2yFyKQ&#x2014; Ken Hawkins (@khawkins98) September 28, 2017 This feeling was most evident in &#x200B;Stephanie Akkaoui-Hughes&apos; Thursday keynote that focused on Architecting Interactions . Key points, highlights: Don&apos;t design an interaction, design context for an interaction. That is, don&apos;t force a user to push the button to open doors, create an environment where pushing a button seems how you should open a door. Stay organic, flexible and holistic: Incomplete, impermanent, imperfect Don&apos;t push change through dictation, pull change through facilitation Her slides don&apos;t appear to be online, but you can see a video from a similar earlier presentation here. 2. Don&apos;t be an exclusionary force Domain driven design talk at #EuroIA17 pic.twitter.com/eII4dGKoj8&#x2014; Mark Foley (@folomarco) September 28, 2017 Reviewing work to rein in some 50 different domains, Anya Somerville, Silver Oliver and Michael Smethurst presented on Domain Driven Design at UK Parliament. To discover what is closest to the truth, they noted the importance of talk therapy to get stakeholders relaxed and open. Often this revealed the important things which no one had previously thought to mention. Also of importance was to keep the rather complex concept domain driven design as an inclusive and facilitating process &#x2014; avoiding past incidents where those who could not master IA-speak were simply forced out. Observation: To vertically integrate or be web-wide? A point of interest when contrasting with work to unite EMBL&apos;s IA, where Parliament has been able to pursue a unifying IA, it also sees an opportunity to unite its implementation stack. This is in contrast to our work at EMBL, while we are also working to formulate a global IA we are unable (for better or worse) to recommend a single technical stack. This complicates things, but provides interest in that our IA should &#x2014; in theory &#x2014; be largely technology agnostic. 3. You&apos;re only as good as your proof is understood Loving this mistake list by @AlisanAtvur about user research @euroia #euroia17 pic.twitter.com/CODnZgiakt&#x2014; Raffaella Roviglioni (@Raffiro) September 30, 2017 Reminding me I should take an extra five minutes in preparing everything I do, Alisan Atvur presented on Why Insights Die and I see a key fulcrum: convert research into action by placing evidence on a logical path to conclusion. Maybe ears aren&apos;t deaf, maybe you&apos;re just haven&apos;t localised your dialect. 4. Where is this all headed? Sandwiching in the conference, IA celeb Lou Rosenfeld presented on Beyond User Research . One can&apos;t say if it was fully the intent of Rosenfeld, but the message I heard tied in well to the theme of many talks: what we do doesn&apos;t matter if nothing changes. 5. Create change There&apos;s plenty more to be said for EuroIA 2017, but I&apos;ll draw a focus: IA and UX have achieved a great success in getting institutional attention. The metaphorical metal is hot. The time is now and we should translate our methodologies into operations to enact change. Abstract concepts and data are the heat for our metal, our solutions are the forging, but we must not forget to help our colleagues temper these notions into working methods. Thereby we best resist entropy. We always aim to better the path to organisational and user success, to get there we work with and within our organisations to build reusable tooling and methods. We help discover the best series of actions, then we aim to make the best the default. Once you&apos;ve done that, loop back and see what is now the best series of actions. It really all does come back to organisational change, and we can best achieve that by improving an organisation&apos;s tools. More? You can get many of the slide decks from EuroIA 2017 here, or get the highlights on Twitter and don&apos;t forget the 2018 edition is coming in September to Dublin. Go on, read a bit more. Those links are just a wafer thin mint.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Fluid IA to enable user discovery, prepare for change  Next: 8 Video conferencing tips, dos, don&#x2019;ts  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20171002-euroia-2017-takeaways.html"},
{"id":"20", "title": "8 Video conferencing tips, dos, don’ts ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   8 Video conferencing tips, dos, don&#x2019;ts 27 Oct 2017 Small things make a big difference, like this tiny and simple but well-made webcam.  While most any video platform and kit can work great for one-to-one video calls, I&apos;ll share lessons learnt in my previous roles and during my time in EMBL-EBI&apos;s Web Development team.  &#x2139;&#xFE0F; This post is cross-posted from the EMBL-EBI TSC Blog. 1. Mute when you don&apos;t plan to speak This tip is extra important when you&apos;re using your computer&apos;s built-in microphone and speakers. It&apos;s tough enough chatting over video but it&apos;s even worse when a viewer&apos;s microphone picks up the speakers voice and echoes it back in. If you don&apos;t expect to speak up in the 30 seconds, mute your microphone. It&apos;ll save a few KB/s of bandwidth and make the audio much clearer. 2. Close those extra tabs and applications Bandwidth can often be the cause of slow and jerky video conferencing, but a CPU that&apos;s churning away some badly behaving web advertisement will make it far worse and you&apos;ll be stu-t-t-t-t-tttering away. If you&apos;re dialing in from home, you might also want to be sure no one else is updating their OS or torrenting Game of Thrones. 3. Don the headset of geekery The &#x201C;Logitech H390 USB Headset&#x201D;, Studmuffin edition. Even you mom wouldn&apos;t say you look good in a call centre-style headset, but you&apos;d hear her better when she says you look like a disgrace. And mum would hear your crying crystal clear. When you&apos;re dialing in solo, a headset really helps with audio quality and can even help you cheat on needing to mute every few seconds. Even a pair of iPhone earbuds will make a huge difference. We&apos;ve found the Logitech H390 headset to work well, and it has a convenient mute button on the cable. You should be able to get it for less that &#xA3;30. 4. Use a decent webcam A good webcam not only gives you a better picture quality, but it allows you to: Change the viewpoint (unless you just like everyone seeing the bottom of your chin?); and&lt; Most have a wider field of view so your can fit in the person(s) sitting beside you. We&apos;ve been using the &#x201C;Logitech C920 HD Pro Webcam&#x201D;. It does the above and has a better microphone than your laptop, great if you have a group on your end. You should be able to get it for less that &#xA3;70. 5. Big microphone for big groups If you&apos;re calling from a big room, bring along a big microphone. Not only will it have a bigger microphone, some will allow you to capture audio from 360&#xBA;, or from a single direction &#x2014; blocking out a noisy background. Blue&apos;s &#x201C;snowball&#x201D; does this well for about &#xA3;60. 6. Skype is easy, but it&apos;s not reliable If you&apos;re dialing into on the VC rooms through Lifesize Cloud, you won&apos;t have much of a choice. But otherwise with video conferencing you really do get what you pay for, Skype, Google Hangouts and Slack are fantastic for the convenience, but quality can be vastly variable. We&apos;ve found Zoom and Join.me to be miles better in reliability. 7. Always improve The technology involved in calling is always getting better, so it&apos;s worth re-evaluating your kit and platforms every 6 months to see if there&apos;s something better. 8. Consult the Desktop Team The EMBL-EBI Desktop team has guides on using the VC facilities and some nice kit to borrow. Bonus: Don&apos;t foget about the culture of meetings Further reading on the culture of video conferencing over at Scott Hanselman&apos;s blog. What say you? This list is a work in progress and I certainly don&apos;t think we&apos;ve solved the issues involved. What do you think of the above? Other tips? khawkins@ebi.ac.uk or @khawkins98 or @ebi_web_ux   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Five highlights from EuroIA 2017  Next: Comparing IBM Plex and Fira Sans  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20171027-video-conferencing-tips-dos-donts.html"},
{"id":"21", "title": "Comparing IBM Plex and Fira Sans ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Comparing IBM Plex and Fira Sans 12 Nov 2017 At the time of publishing this post was set in Plex &#x2014; I\&apos;m getting my hands dirty..  Here&apos;s a quick comparison between, Plex, Helvetica, Fira and a couple of other stand-ins.  I won&apos;t dwell on it, but Helvetica and Helvetica Neue are not ideal fonts for the web for technical, brand and usability purposes, particularly when you&apos;re showing a lot of scientific data tables, as we do at EMBL-EBI. Small note: Within EMBL-EBI we&apos;ve used Helvetica Neue as our corporate font both in print and online for many years, now we&apos;re considering a change. The below blog post is shaped by that discussion, but the thoughts here are my own. After a lengthy discussion and consultation we&apos;re currently analysing Fira Sans as our likely next font for both corporate and data uses. For those that don&apos;t recall, Fira is an Erik Spiekermann typeface that was developed for Mozilla&apos;s now defunct Firefox OS. We&apos;re working through the best way to utilise Fira Sans (and the great Fira Code). A major concern are fonts when it comes to data tables. On with it, already But what I want to chat about is what IBM has been up to: unveiling their new Plex font family made by Bold Monday.  IBM discusses their change in typeface.  The typeface is impressive stuff that captures my interest: IBM is looking to solve many of the same issues that we are at EMBL: Helvetica is an imperfect and bland go-to choice. Plex has a nice bit of personality in its letter forms Plex is a full family with many weights (8) and a serif, sans and mono style (it&apos;s also due to land on Google Fonts) Plex has an open licence Plex has a wide international character support It has an active development community With the exception of the serif style (and perhaps the development community), Fira has many of the same advantages. I also noticed that Fira and Plex share quite a bit in style, so I wanted to take a quick look at some of the letterforms. Here&apos;s a quick comparison between, Plex, Helvetica, Fira and a couple of other stand-ins &#x2014; these are SVGs, if you want to download and compare glyphs without having to install fonts. Like Fira, Plex seems to play well where Helvetica was once used and both Fira and Plex fix a number of long-standing issues around the lowercase L and overly tight c and e . Fira and Plex have personality in the letterforms. Plex might be a bit more conservative than Fira, and the uppercase i is a clear win for environments where you don&apos;t want to confuse a vertical pipe | and lowercase l . The uppercase E has also been shortened less than Fira. The wide width of Plex&apos;s numbers is notable. Again, this may be a concession for data environments, particularly the styling of the number 1 . The Plex italics add a big flair Especially in the mono style (where both Fira Code and Mono lack a true italic). However my main interest at the moment is data compatibility &#x2014; but personality in italics could be quite nice. Plex&apos;s very square t , it feels like a mono style. On the style side, there are two major differences: Plex has distinct narrowing on some of the lowercase letters that are reminiscent of ink traps Fira has a slightly whimsy feel with the top and lower cap on some letters (look at the ascenders of the b, h and h, and the q&apos;s descender). That&apos;s all for now On the whole, Plex seems a bit more conservative, practical and airier than Fira. I&apos;m sure we&apos;ll hear much more about Plex in the coming months (I&apos;ll also be very interested in the nice tooling around their design system), but I did want to compare and contrast Plex and Fira specifically -- or, at least a little bit of them. If you want to have a play with Fira or Plex on your desktop, here are links (they&apos;re open licensed): &#x1F521; Fira desktop fonts &#x1F521; Plex desktop fonts If you&apos;re also interested in using Plex in a data-heavy environment, I&apos;d be curious to know how you get on with it: &#x1F426; @khawkins98   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: 8 Video conferencing tips, dos, don&#x2019;ts  Next: The Content-Action Model origin story  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20171112-ibm-plex-font-and-fira.html"},
{"id":"22", "title": "The Content-Action Model origin story ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   The Content-Action Model origin story 22 Jan 2018 &#xA0;&#xA0;Filed in: CAM for Web Systems, origin story  Guti&#xE9;rrez, Diego, Active, Hieronymus Cock, and Lessing J. Rosenwald Collection. Americae Sive Qvartae Orbis Partis Nova Et Exactissima Descriptio. [Library of Congress].  Beyond the Core Content Model and into organisations, actions.  ol ol { list-style-type: lower-alpha; } (An aside to the Content-Action Method for Web Systems post) I started to use Core Content Model methods (first enshrined by Ida Aalen), and found them to be incredibly useful&#x2014;but not quite right. The Content-Action Method for Web Systems took shape when I started to radically adjust the format and scope to suit the needs of our organisation and its diverse users and&#x2014;wait for it&#x2014;our strategy. How is the CAM for Web Systems different? The CAM for Web Systems is based on the Core Content Model idea (see Figure 1). Figure. Venn diagram showing where the Affordance Method overlaps with the Core Content Model, and where they both sit on the spectrum of &#x2018;system management&#x2019; vs &#x2018;new concept exploration&#x2019;. I&#x2019;ve marked where goal measurement, identification and exploration sit most comfortably. The CAM for Web Systems (in our experience) has proven very effective when workshopping new websites. (We also use the HEART Framework for new, more creative thinking.) The CAM for Web Systems has worked better for on-going maintenance, consensus building, evaluation and improvement of existing sites. Advantages of the CAM There are a few reasons why our CAM for Web Systems (built on the Model) works well for evolving existing sites: Database friendly: The CAM for Web Systems uses a less free-thinking format (i.e. a text and/or database record), so the information is richer for comparing with other records (and much easier to use forensically). The format lends itself particularly well to internal communication and arbitration. Interlinking: The framework is designed for internal cross-referencing, both within a CAM Record and across many of them. Wider focus: The CAM for Web Systems closes the loop on: evaluating success change over time user types organisational placement. More on the CAM? This post only discusses how the CAM compares to the Core Content Model method, for more about the CAM: read the overview of the Content-Action Method for Web Systems   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Comparing IBM Plex and Fira Sans  Next: Introducing the Content-Action Model for Web Systems  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20180122-content-action-model-origin-story.html"},
{"id":"23", "title": "Introducing the Content-Action Model for Web Systems ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Introducing the Content-Action Model for Web Systems 22 Jan 2018 &#xA0;&#xA0;Filed in: CAM for Web Systems, introducing  Content, IA and UX professionals are spoiled for choice when it comes to tooling. But we need to be clear about which ones are right for the job &#x2014; and that means distilling our intentions. Thanks to Ian D. Keating for the Image of drill bits [CC License]  Wiring &#x2018;ugly truth&#x2019; UX diagnostics for better web strategy &amp; IA. Gleaning truth about what should be done &#x2014; and undone &#x2014; on our websites is the central quest of website strategy. There are many roads to the destination, and an arsenal of tools to make the journey smoother: surveys anecdotal feedback user journeys metrics (i.e. Google Analytics) you get the idea &#x2026; Our diagnostic tools are all-important methods towards achieving implementations, and optimising them. But just as you don&#x2019;t start a quest by buying shoes, you need to take a step back before jumping into your Big Website Fix. Strategy &#x2014; motivation, destination, and intent &#x2014; is a much better place to begin a journey of discovery. Building a better journey Strategy &#x27A1;&#xFE0F; Organisational direction in-person interviews big ideas&#x2122; &#x2026; Diagnostic tools &#x27A1;&#xFE0F; Surveys anecdotal feedback metrics &#x2026; Evaluation &#x21A9; This journey to better IA to in turn better the user experience must be built on a clear strategy, otherwise we risk losing our way. To enrich the wider strategy, and make the journey go well, we need to know when to use which diagnostic tools. Let&#x2019;s go. I&#x2019;m the Web Design Architect for the European Bioinformatics Institute (EMBL-EBI). This is a not-for-profit institute that serves data to all of the world&#x2019;s life-science research communities, so it has a lot of different goals. Building consensus on the direction and evolution of the core website is not a one-off thing. It is a long-term, complex relationship amongst people with different priorities and perspectives, and demands communication tools that are fit for purpose. The main tool I&#x2019;ve been working on to achieve this is our &#x201C;Content-Action Method for Web Systems&#x201D;. It helps decision-making on all levels, from layout adjustment to microsite building. (In the Web Development team we call it just the D.A.M. for Web Systems, or CAM for short, because shortening things is our culture, for better or worse.) Origin story? This method began after using Core Content Model methods &#x2014; those were great, but not quite what we needed. For more about how the CAM method relates and doesn&#x2019;t relate, check out the aside post: &#x201C;Beyond the Core Content Model&#x201D;. How we use CAM for Web Systems We use CAM for Web Systems to clearly model: Needs: The organisation&#x2019;s and our target users&#x2019; Content: What it is, and what it isn&#x2019;t Users: Who is visiting us now, and who we would like to join the party Connections, paths, actions: Wherever they are needed Meta stuff: Various contextual information about a model that helps us understand the affordances in motion We isolate each component as an individual item, then tie and untie them in the same conversation. At EMBL-EBI we use the CAM for Web Systems to compare peer concerns. This goes a long way to helping people understand one another, and the sometimes conflicting frustrations/desires/priorities of user communities. In other words, this is a discussion tool to reach agreement. We then record our shared understanding for future discussions and development work. Distilling our intentions in the CAM for Web Systems allows us to build our analytics appropriately, capturing metrics that are truly useful for understanding user journeys. Even documenting disagreements shows our reasoning clearly. Once we isolate &#x2018;purpose&#x2019; (this is harder than it looks), we can test, evaluate, and iterate. Figure 1. The flow of the CAM for Web Systems. Yes, it is a riff on the Double Diamond. What is in the CAM Record, and why CAM for Web Systems contents Organisational documentation: a firm organisational record about the agreed purpose of a portion of a website (such as an /about section) Itemisation of components and actions: specific components for each section; including: Overall purpose: informed by organisational priorities and UX research URLs Goals (user and organisation) User types (prioritised) Content (and who will make it) Preceding and following actions (what pages and actions) Organisational placement (which parts of the organisation are surfaced) Organisation purpose (how does the content map to overall mission purposes in tone or external focus) Content owner (who is &#x201C;responsible&#x201D; for the content overall) Relations between components: which user types are seeking this goal, and which content supports it? Relations across CAM Records: how this content relates to the content, goals or users in other parts of the website (e.g. jobs page). This exposes areas that may need new CAM for Web Systems record. Record of change and knowledge transfer: to avoid repeating previous missteps, and enable knowledge handover. The importance of capturing this cannot be overstated. Truth through perspectives: by asking the same question from many different perspectives, expose gaps/missed opportunities (e.g. website content, external content) or prioritise areas for improvement (e.g. page components that are surplus to requirements). Comparing CAM records By collecting information consistently, we give ourselves &#x2014; and our successors &#x2014; clarity on how things have taken shape, what problems have been solved and what is in the pipeline (where the bodies are buried, essentially). Figure 2. Logic model: Comparing different CAM records. Example: Components of a &#x2018;Contact us&#x2019; system Creating a network of CAM Records can pay dividends, as it reveals fragment goals, content and user types. A common diagnostic evaluation: Figure 3. Output of a CAM Record&#x2019;s content, goals and users for a &#x201C;Contact us&#x201D; system. In this simplified &#x201C;Contact us&#x201D; page for a shop, you can see clearly that the Twitter feed content needs looking at. This CAM Record shows: the Twitter feed is superfluous to perceived requirements we&#x2019;ve missed a goal or user type So we can prioritise looking at the Twitter feed to see if people are using it. Then we can either strike it, or delve into which of our customers are utilising it, and why. Figure 4. A content fragment often allows us to clearly identify a missed use case. Where and when to use By modelling our systems consistently, we routinely surface and resolve logic issues. The CAM method allows us to develop hypotheses more clearly, and expose important knowledge gaps. This allows us to construct a shared narrative with legitimacy within the organisation, allowing us to cooperate as a group and avoid internal nitpicking. In the &#x2018;Contact us&#x2019; example, looking closely at how people used the Twitter feed (which seemed superfluous) allowed us to add a new, validated goal: &#x201C;Get info on sales and last-minute updates&#x201D;. Very handy. But is that a genuine need of our two user types? Our framework allows us to see and prioritise areas we need to investigate. It helps us articulate our questions, and select the right tools to investigate and test our hypotheses. Importantly, we can share our findings easily with one another, and feed them back into iterations of the model. By doing so, we are continually improving the model and making it easier to make decisions based on evidence. What&#x2019;s next for the CAM for Web Systems? This is the first of what I hope will be many posts exploring this new approach. Depending on feedback on this post, and developments in our many digital communications fora, I&#x2019;ll be writing about: CAM in Action: A how-to on getting started with this methodology. Visualising insights: A dashboard to give knowledgeable stakeholders a &#x2018;forest from the trees&#x2019; view on our strategy, interconnected content and user activity; Goal-driven metrics: Looking beyond page views, and using our CAM for Web Systems to capture metrics of success and failure that relate directly to our objectives; Programmatic solutions: Going beyond paper, manipulating our data in lightweight databases like Coda and surfacing in-context through RDFa in our website HTML markup; Specialising: How we take the general model and adapt it to bespoke use cases, such as EMBL-EBI&#x2019;s free-to-use scientific data services; UX + the CAM: What does it mean to &apos;do UX&apos; with our Content Action Model? Beyond the buzz. Published: read it here. Figure 5. The goal: clearly see and show connections to power dashboards and gather new insights. Kudos in particular to this post For the growth of this CAM method, I owe thanks to many for inspiration, support and indulgence. But to the writing of this article, I&apos;d like to pass on some specific thanks: Mary Todd-Bergman (@themarytodd): For editing this, sure, but also for on-going support, testing and sounding-out of this approach. Ivan Labra (@ilabra): For bouncing ideas about what I&#x2019;m really getting at here and getting my speak out of the organisational bubble. If you&apos;re also interested in chatting about this evolving model or improving it: &#x1F426; @khawkins98   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: The Content-Action Model origin story  Next: UX, discovery, analysis + the CAM  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20180122-content-action-model.html"},
{"id":"24", "title": "UX, discovery, analysis + the CAM ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   UX, discovery, analysis + the CAM 7 Feb 2018 &#xA0;&#xA0;Filed in: CAM for Web Systems, UX  Three options, but which does a user want? Maybe they do not want any of the three. Thanks to Flickr user isa for the image [CC License]  What does it mean to &apos;do UX&apos; with our Content Action Model? Beyond the buzz.  In January I wrote about the Content-Action Model for Web Systems, a method I&apos;ve been working on to better unite strategy, user actions, content and change over time. This post will look at the Content-Action Model (CAM) and it&apos;s relation to and participation of UX. UX is key to the CAM process, it challenges assumptions and fuels new idea creation &#x2014; that said, of course UX is vital. If you&apos;re doing anything online and not paying attention to user experience design, you&apos;re doing things poorly. But what does it mean to generically do something as broad as UX? In my intro post on the CAM I sighted only some passive UX diagnostic tools of user surveys, feedback and analytics. But, you shouldn&apos;t only be doing passive UX research, and the CAM helps us distill component beliefs &#x2014; so we can dig deeper than passive forms of UX. Getting to good UX: An example With the CAM the importance is both in the process and capturing specific hypothesis, clearly stating our user types, goals &#x2014; and the relation between these. Making records to be challenged New customers (user) want (action) to buy subscriptions (goal &#x1F3C6;) Our CAM is composed of implied relationships like these, which we can: Challenge the relationship: do new customers really want to buy subscriptions? What evidence do we have? Examine the components: who are new customers? It&apos;s a pretty broad segment with perhaps many personas or sub-groups. Investigating implied relationships and individuals New customers (user) Who specifically are these people? Is it only one type? Let&apos;s investigate a sample of visitors. want (action) Do they? to buy subscriptions (goal &#x1F3C6;) Talk to and observe the people we identify. The CAM is designed to distill and challenge these hypothesis as we complete an iteration of a CAM record: Figure 1. What CAM for Web Systems looks like in motion. Stages 1, 2 and 3 represent one iteration and version of a CAM record. When these deeper questions are posed we&apos;re exiting the measure cycle and re-entering our divergence phase. It&apos;s a good and logical time to use more time-intensive and open-ended processes like in-person interviews. ol ol { list-style-type: lower-alpha; } #main-content-area li { margin-bottom: .5rem; } p, li { max-width: 800px; } .card {color: #555; } Building the CAM, what&apos;s next? The Content-Action Model for Web Systems is an emerging methodology and I&apos;ll be blogging about it throughout 2018 as the system matures and distills. Next I&apos;ll likely be working to establish a formal ontology for the CAM, and to make a Getting started post. Until then, if you&apos;ve not already read about the CAM, check out the original post here.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Introducing the Content-Action Model for Web Systems  Next: Migrating to Zurb Panini 2.0  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20180207-discovery-and-analysis.html"},
{"id":"25", "title": "Migrating to Zurb Panini 2.0 ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Migrating to Zurb Panini 2.0 10 Feb 2018 &#xA0;&#xA0;Filed in: Panini,static sites  2.0 Paninis. Or is it just 2.0 Panini? Paninodes? Thanks to Flickr user Stephanie Vacher for the image [CC License]  Not yet stable yet, but has some compelling features.  Why upgrade to 2.0? I&apos;ve been using Zurb&apos;s Panini static site generating template to power this site. On the whole I&apos;ve generally found it quite good, but there&apos;s been a couple rough edges that continued to paper cut when creating content (even though I realise Panini wasn&apos;t made with blogging in mind). One thorny limitation is there&apos;s no seamless way to generate a blog index or RSS feed. So in versions 1.X, I had to create and manually maintain a YML file with each blog entry. Not the end of the world, but it&apos;s a copy paste job that would occasionally lead to mistakes and was tedious; an excerpt of my old manually rolled data/blog.yml file: - title: Actioning web strategy &amp; IA: The Content-Action Method for Web Systems layout: layouts/post.njk teaser: A method to distill content and user, organisational goals into an interconnected, holistic practice. image: /blog/drill-bits.jpg date: 2018-01-22 url: /posts/20180122-content-action-model.html And beyond being tedious to create and maintain (copy-pasting each page&apos;s meta data), the method only gave me access to what&apos;s in the YML file &#x2014; so that meant my RSS feed couldn&apos;t have the full blog posts: \{{#each blog}} &lt;item&gt; &lt;title&gt;\{{this.title}}&lt;/title&gt; &lt;description&gt;\{{this.teaser}}&lt;/description&gt; &lt;link&gt;\{{root}}\{{this.url}}&lt;/link&gt; &lt;pubDate&gt;\{{this.date}}&lt;/pubDate&gt; &lt;/item&gt; \{{/each blog}} But, lo! In version 2.0, a new \ variable. \{{#each-reverse pages}} \{{#ifequal this.[2].active_path blog }} &lt;item&gt; &lt;title&gt;\{{this.[2].title}}&lt;/title&gt; &lt;description&gt; &lt;![CDATA[ {{#markdown}} {{#compileBlogPostForRSS this}}\{{{ ../this }}}\{{/compileBlogPostForRSS}} {{/markdown}} ]]&gt; &lt;/description&gt; &lt;link&gt;\{{root}}\{{this.[2].url}}&lt;/link&gt; &lt;guid&gt;\{{root}}\{{this.[2].url}}&lt;/guid&gt; &lt;pubDate&gt;\{{this.[2].date}}&lt;/pubDate&gt; &lt;/item&gt; \{{/ifequal}} \{{/each-reverse}} The magic happens in my custom {{#compileBlogPostForRSS}} helper, where I pass in the full body of each post and render it as a Handlebars template. Here&apos;s a link to that helper. The approach is slightly messy as I must reach into the second [2] spot of each page array, but it does the job. (n.b. This is meant to get better by changing from an arraay to named object.) I now use the same approach to build this site&apos;s Blog index. Upgrading from 1.x to 2.0 It&apos;s not so bad. Remember Panini 2.0 isn&apos;t finalised yet, but as Zurb points out: It&apos;s pretty stable, and if you want to give it a try, we&apos;d love some feedback or bug reports on anything you run into. Panini 1.X defaulted to use Gulp, and it was what worked best for me. So this guide is from gulp to gulp. Change your packages.json to use 2.0: panini : ^2.0.0-alpha.2 (Previously I was using Panini 1.5.1) In your gulpfile.js drop var panini = require(&apos;panini&apos;); and add const panini = require(&apos;panini/gulp&apos;); Panini now has default expectations about the naming of layouts, partials, etc. So my Gulp Panini task is now just (diff): gulp.task(&apos;panini&apos;, () =&gt; { return panini(&apos;src&apos;, { // builtins: false, }) .pipe(gulp.dest(&apos;build&apos;)); }); If you&apos;re using browserlab, panini.refresh(); is a bit harder to use and is going away. Instead my gulp.watch task now invokes panini.create();. That may not be the most efficient way, but it works. #ifequal is no longer a built in helper, instead it&apos;s eq. But I didn&apos;t want to find-replace, so I just added the ifequal helper back. Apparently #ifPage is also out, but it still seems to be working. Here&apos;s a short list of documented breaking changes. Misc changes I had to do a few other things that were unique to my setup. I was generating my critical path CSS as a partial called critical.min.css.html (&#x1F6A8;hack alert). It doesn&apos;t seem naming with dots are allowed in partials anymore, so I&apos;ve called the file criticalmincss.html I also had a page called rss.xml that was ignored by Panini. So I named it rss.html and move the output to rss.xml. THis is meant be changing with the addition of a /static build source. Previously I didn&apos;t have my layouts,partials,data,pages under a directory. I moved them to ./src. Here&apos;s the commit from my upgrade to 2.0. Other neat things I&apos;ve not yet used these yet, but they look like they&apos;ll really extend how long I can use Panini: Localisation and translation Inject content into blocks A bit like inverse partials, you can inject from a local page back into the parent template. The Handlebars Helpers project is now included, and it brings many helpful ways of sorting and conditionallys showing data, and Moment.js style date handling: {{moment this.date format= YYYY MMM DD }}. Panini still feels like a bit of unusual static templating engine. It&apos;s less feature complete than some, yet it also feels more light and tool-like than others. But I&apos;ve enjoyed using it and it&apos;s been helpful, so thanks Zurb and contributors! Check out Panini 2.0 here N.b. I don&apos;t think there&apos;s an existing Panini sample/quick-start blog project, if there&apos;s interest I could convert this site into a Panini blog boilerplate .   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: UX, discovery, analysis + the CAM  Next: What if: A web font for data  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20180210-zurb-panini-2-migration.html"},
{"id":"26", "title": "What if: A web font for data ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   What if: A web font for data 19 Mar 2018 &#xA0;&#xA0;Filed in: Life Sciences, data, fonts, UX  GO:9X09234: enolpyruvyl-6-text-like-this-is-fit-to-drive-you-batty-3-cyclohexene. Sources: 1 2 3  Alphanumeric data works well for programmatic query, but less so for direct human consumption. What if a font was designed specifically with life sciences data in mind?  As EMBL-EBI&#x2019;s web design architect, I help foster community standards for how services enable user tasks with consistently and predictably. Within the standards is a mix: things found on most websites &#x2014; menus, accordions, layout, messaging, branding &#x2014; plus application interactivity and data visualisation standards. It&#x2019;s a hugely broad undertaking with complex technical implications. But, one of the biggest challenges is also the simplest: text readability. EMBL-EBI helps enable free access to massive amounts of data from life science experiments. This allows users to access lots and lots of tables with data identifiers that look like: ENSMUST00000032717 ENSMUSG00000030507, and A_51_P156144, 4532657, 10563797, 129205_at, 4947113, 4910838, 1457012_at, 4962225, 5549684, 5020471, 4460390 Making these strings more understandable is partly a classic design problem of when, where and how these strings are presented. But it&#x2019;s also a question of what is displayed. Problems to address Here&#x2019;s a starting list (ideas? comment? &#x1F426; @khawkins98): Multiple sequential numbers: it&#x2019;s not uncommon to have 7 zeros 20000001 in a row. Oh wait, that was only 6 zeros. Readability: Distracing_under_scores BuMpy caPitiLiSation Dropping descenders in letters like these: jJlpP Small openings (counters) in numbers at small sizes Wide widths of monospacing: monospaced fonts are often not used as they can take up more room (particularly with spaces between words) and folks want to pack as much data as they can into one screen. Monospaced = false Monospaced = true A parallel in code fonts Take computer code: monospaced fonts are an immense help. Uniform character alignment makes it easier to navigate and compare parallel rows of commands. It&#x2019;s much akin to how spreadsheets are good for lining up grids of numbers. Monospace fonts typically have sharp, angular edges. This helps prevents mixups of a lowercase l and a pipe | or a number one 1. Likewise for an uppercase O and numeric zero 0. You might call some of these monospace fonts &#x201C;code&#x201D; fonts. Aside: There are also &#x201C;duospace&#x201D; fonts that combine the discernibility of mono fonts, but with flexibility for letters like w and m Code fonts 2.0 Further illustrating the potential of modern font usage across the desktop and web, the concept of ligatures has emerged for monospaced code fonts. Take the font Fria Code, it improves the readability of common code expressions and strings: !=&#xA0;&#xA0; -&gt; != www&#xA0; -&gt; www ***&#xA0; -&gt; *** ?=&#xA0;&#xA0; -&gt; ?= These ligatures help with visual smoothness, readability and discernments of repetitive characters (i.e. ** vs ***) There is some controversy about how adding ligatures can dilute truth when syntax is gospel but, in general, the trend of code ligatures shows potential. It&#x2019;s still fairly new, first appearing in earnest in 2015 and you can now easily graft programming ligatures onto many monospaced fonts. Aside There are also math fonts, but those are designed to facilitate characters that aren&#x2019;t easy to represent in ASCII, which is a different problem than the one we&#x2019;re looking to address here (as most of the data we&#x2019;re dealing with has ASCII representations) Why fonts matter for life science data I&#x2019;ve been talking about possible solutions to programming issues. It doesn&#x2019;t fully map to the issues in data design, much less Life Science data but we can still draw inspiration from the solutions being worked on in the programming space. To venn: Something like that, anyways. 11 Tools and approaches we could use A non-exclusive list, but some good places to look along with a few illustrative examples. I&apos;m not saying all of these are good ideas, but they&apos;re possibilities that address some issue and this is my my way of airing everything. Oh, these are not technical demonstrations, only illustrations. 1. Monospace fonts Just using monospace could be a big win. With the extra readability of the letter forms we could save space by reducing the font size ever so slightly. See the Pen A data font: Monospace fonts by Ken Hawkins (@khawkins98) on CodePen. &#xA0; 2. Duospace fonts Here I&apos;ve used iA Writer Duospace to illustrate how we can bend the rules of monospaced fonts for better readability. See the Pen A data font: duospace by Ken Hawkins (@khawkins98) on CodePen. &#xA0; 3. Ligatures Particularly for grouping repeating numbers ever so slightly in the manner of www vs www. This one currently makes me nauseous. See the Pen A data font: ligatures by Ken Hawkins (@khawkins98) on CodePen. &#xA0; 4. Ink traps Bringing ink traps to the digital world could help for small text on HiDPI (retina) screens. See the Pen A data font: Ink traps by Ken Hawkins (@khawkins98) on CodePen. Second line is Retina MicroPlus and shown as SVG for licensing reasons. &#xA0; 5. Avoid descenders We could avoid descenders for j and similar. This is a similar readability case as lining vs old style figures. See the Pen A data font: small descenders by Ken Hawkins (@khawkins98) on CodePen. &#xA0; 6. Being width conscious With a narrow monospace font 1 2 3; or follow the lead of duospace fonts and narrow the width of the space between words by 50% See the Pen A data font: Width conscious by Ken Hawkins (@khawkins98) on CodePen. &#xA0; 7. A mild-serif monospace for legibility It&apos;s hard to be enthusiastic about this idea, but serifs on a monospaced font at small sizes might help readability on HiDPI screens. There are a few options 1 2 3 See the Pen A data font: serif monospaced font by Ken Hawkins (@khawkins98) on CodePen. &#xA0; 8. Ordinal position highlighting We could highlight every Nth character in a sequence. See the Pen A data font: Ordinal highlighting by Ken Hawkins (@khawkins98) on CodePen. Unfortunately there still is no :nth-letter pseudo selector in CSS and workarounds (1 2) require JS. &#xA0; 9. Utilise CSS support for OpenType features Is you font too tightly kerned for numbers? That letter g not working? In addition to ligatures, contemporary CSS and browsers support other advanced OpenType features including tabular figures (tnum) and Stylistic sets (ss##). See the Pen A data font: Stylistic alternates, tabular numbers by Ken Hawkins (@khawkins98) on CodePen. &#xA0; 10. Use a legible base font Obvious but important: See the Pen A data font: A legible base font by Ken Hawkins (@khawkins98) on CodePen. &#xA0; Bonus number 11: Do the basics well In addition to No. 10, we shouldn&apos;t forget just how much we can achieve through good design of tables. &#xA0; What&#x2019;s next Addressing these issues is on our backlog &#x2014; if you&#x2019;re also interested in the problem space or have comments, please get in touch: &#x1F426; @khawkins98 or &#x2709;&#xFE0F; khawkins98@gmail.com .monospaced { font-family: ibm-plex-code,Courier,monospace; } .monospaced-ligatrues { font-family: Fira Code ,Courier,monospace; } .monospaced-ligatrues.small { font-size: .85rem; }   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Migrating to Zurb Panini 2.0  Next: Inside the Content-Action Model  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20180319-data-font-for-life-sciences.html"},
{"id":"27", "title": "Inside the Content-Action Model ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Inside the Content-Action Model 29 Mar 2018 &#xA0;&#xA0;Filed in: CAM for Web Systems, ontology  Terraced rice farming: through sculpting and definition of an organic environment, we make better use of a resource. There is an parallel with interactive content. Thanks to Flickr user David Wormley for the image [CC License]  An ontology to document, plan, define and implement CAM magic.  I&apos;ve previously stated how the Content-Action Model for Web Systems better unites strategy, user actions and content over time &#x2014; that&apos;s a bold claim that&apos;s possible through triples of content, users and goals. This post details the first steps from theory to action. By placing our content, goals, users into an ontology we can derive logical queries of relationships, placement and success. &#x2014; me, just now. The takeaway I intend to show: CAM Records are the parent in the ontology with CAM Goals as the central hub. Pages, content units, and users play a strong supporting role. Figure 1. A WebVOWL visualisation of an early draft of the ontology framework for the CAM model. Want a closer look? Download a copy of the ontology (v.002). What&apos;s the point of doing this? A sample Below (in Figure 2), I&apos;ve illustrated a connection in the Jobs and Front page systems (Records). Here they have a join in through the goal of Informing and understanding , however we can see the systems use different content to achieve this. Knowing this provides a chance for sympathetic design between pages and ask if we&apos;re doing enough to re-use existing content. Figure 2. A sample view of inferences between CAM Records This is one way that triples allow us to programmatically understand content and make new observations; in a similar fashion to the above we can query for: absence of Content supporting Goals; users missing Content to support their needs; Records with strong relationships or potential redundancies; amongst others. Enabling use across the organisation A risk of using an ontology information architecture is creating a barrier of IA speak that only allows our most experienced content professionals to understand the system &#x2014; and that&apos;s contrary to our aim of websites more responsive to needs of users and organisations. So our ontology functions as a reference and guide, and not the working implementation. Collecting knowledge Instead of an overly formalised front end, we will collect information for this ontology in a conversational and flexible survey-style document and manage it in a human-approachable web application. Below (in Figure 3), three screenshots: first collecting the knowledge, managing and displaying inferences. Figure 3. Prototypes from left to right: loosely structured documents to collect information, user-accessible editing forms, processed and cross-referenced displays of information. The ontology will function below the surface and only be visible to users indirectly. Use of a web application also allows us a path to future goals; including: templated inferences; and draw in third-party information, such as from web analytics. Interested in the ontology, CAM, or the application layer? &#x1F449; Get in touch: &#x1F426; @khawkins98 or &#x2709;&#xFE0F; khawkins98@gmail.com Building the CAM, what&apos;s next? The Content-Action Model for Web Systems is an emerging methodology that I&apos;m blogging about throughout 2018. You can see previous posts here. Next I&apos;ll write about the user-facing implementation of the ontology as a web application. That will allow us to better capture truth, derive observations and query metrics of success from our analytics.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: What if: A web font for data  Next: Integrating Eleventy with gulp, upstream JS  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20180329-cam-content-action-goal-ontology.html"},
{"id":"28", "title": "Integrating Eleventy with gulp, upstream JS ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Integrating Eleventy with gulp, upstream JS 21 Oct 2019 &#xA0;&#xA0;Filed in: gulp, Eleventy, EMBL  Drip. Drop. Drip. Opening the tap of of upstream data objects for Eleventy. Thanks to Flickr user Paul B for the image [CC License].  Eleventy notes that it, works great with data &#x2014; use both front matter and external data files but the static site generator stops short of working well with upstream in-memory data objects for local development.  This post is prompted by a project for a highly-modular design system as part of my work for EMBL &#x2014; a leading laboratory for the life sciences. We&apos;re using Eleventy with gulp (for task running and building) and Fractal (for design components). We wanted to: Have gulp trigger builds of Eleventy Utilise Eleventy&#x2019;s watch/refresh commands for local development Send variables to Eleventy&#x2019;s JavaScript data files from gulp (or other Node JS tasks) There are methods to achieve part 1 but not with part 2 and 3. But we made a solution. tl;dr We forked 11ty&#x2019;s cmd.js to better integrate with gulp and other Node JS. I made a demo at khawkins98/gulp-eleventy-example. I hope Eleventy&#x2019;s maintainers can take some inspiration from this. Still here? Great. Read on. Scenario Here&apos;s some really useful data, please use it Fractal creates a really useful JavaScript object that lists component file structure, the contents of those files and compiles nested templates. An illustrative example of the file structure: fractalComponents = { component: &#x201C;myComponent&#x201D;, files: { &#x201C;myComponent.css&#x201D;: { &#x201C;Contents of the CSS&#x201D; }, &#x201C;myComponent.njk&#x201D;: { &#x201C;Contents of the NJK template&#x201D; }, &#x201C;CHANGELOG.md&#x201D;: { &#x201C;Contents of the changelog&#x201D; }, &#x201C;README.md&#x201D;: { &#x201C;Contents of the readme&#x201D; } &#x2026; and so on Also, Fractal enables component Nunjucks templates can be invoked like: &lt;!-- Could not render component &apos;@myNavComponent&apos; - component not found. --&gt; Which is great as it allows us to npm install components and not have to move/symlink the Nunjucks templates into Eleventy src/ directory &#x2014; and it keeps syntax consistent across environments. In principle we could get Eleventy to do the same tasks, scanning the file system and rendering our templates &#x2014; but we didn&#x2019;t want to duplicate our build process &#x2014; especially considering that both Eleventy and Fractal were already running in Node JS. So, that means we&apos;ve got some in-memory data we&apos;d really like for Eleventy to receive, and receive updates to if a component is added or edited. This is important for local development In our use case we&apos;re editing files locally and want a Task A (Fractal) to be able to see changes, updates its data and feed it to Task B (Eleventy). Eleventy&apos;s current design is a non-issue for our production builds. For production, Fractal generates the data and just hands it off to Eleventy. (That said: I could envision a scenario where part of the build process the Eleventy process might want to feed data to some Process C for dynamic rendering.) So what are you asking for? Designing our solution As previously mentioned, Eleventy has a very nice feature supporting JavaScript data files. And as with most watch command&apos;s Eleventy&apos;s watch observes only file-system changes &#x2014; that means we need our upstream task (gulp) to be able to trigger an Eleventy rebuild for local development. So a conceptual example for our desired scenario looks like the below. Have some upstream data that we want to pass to Eleventy. // Generate a sample list of all files in a scope outside of Eleventy gulp.task(&apos;file-list&apos;, function () { global.fileList = []; // we could pass by not using a `global`, but this is the simplest for an example return gulp.src([&apos;./somePath/**/*.{njk,html,js,md}&apos;]) .pipe(through.obj(function (file, enc, cb) { global.fileList.push(file.path); cb(null); })); }); Have an Eleventy data file pull in a variable. // ./src/site/_data/fileList.js // Capture the sample list of all files from gulp // for demonstration Gulp integration with Eleventy module.exports = { files: global.fileList }; On a targeted change event, have Gulp invoke ask Eleventy to rebuilt. // Watch something for changes gulp.task(&apos;watch&apos;, function() { gulp.watch([&apos;./src/**/*.{njk,html,js,md&apos;], gulp.series(&apos;file-list&apos;, &apos;eleventy:reload&apos;)); }); // Or another scenario with an `.on` event triggering a refresh let fractal = require(fractalConfig).initialize(); fractal.components.on(&apos;updated&apos;, function() { elev.restart(); elev.write(); } // Refresh eleventy gulp.task(&apos;eleventy:reload&apos;, function(done) { elev.restart() elev.write() }); Recap: we want to do some local development, let a parent process update a variable and and then ask Eleventy to trigger a rebuild, pulling in the new data by the Eleventy JS data file. Aside A child process won&#x2019;t get us there Unless you like dumping memory to disk One method we initially considered for our need was to use Node&#x2019;s child_process. This is quite clean and is used below by zellwk.com; from zellwk/zellwk.com/blob/master/gulp/eleventy.js const exec = require(&apos;child_process&apos;).exec const eleventy = cb =&gt; { const command = &apos;eleventy&apos; exec(command, function (err, stdout, stderr) { console.log(stdout) console.log(stderr) cb(err) }) } Using this method you&#x2019;re also able to run Eleventy with a nice callback on completion &#x2014; the downside to this method is there&#x2019;s no clean way to pass in-memory objects to the child_process, you&#x2019;d need to stringify your variables: require(&apos;child_process&apos;).fork(&apos;./child.js&apos;, [], { env: { FOO: &apos;bar&apos; } }); For us there are two deal breakers with this method: The object we want to pass is quite large and we&apos;d rather not risk issues with stringification. We&apos;d also need to destroy and re-invoke Eleventy every time during local development, losing access to elev.restart() and elev.write()  Eleventy, can you hear me? Making it happen Eleventy&#x2019;s entry is cmd.js and we need access to elev &#x2014; but that unfortunately is inside a try statement. So I forked 11ty&#x2019;s cmd.js in the local project. Those changes better integrate with external JS with a few minor changes but it&apos;s all about a key change: module.exports = elev; In this way Gulp, or any other Node process, can now use Eleventy as a child task. How? Like this Set up Eleventy using our forked local command file. // Prepare eleventy process.argv.push(&apos;--config=eleventy.js&apos;); // Eleventy config const elev = require(&apos;./eleventy-cmd.js&apos;); We aks eleventy to do its initial build. gulp.task(&apos;eleventy:build&apos;, function(done) { elev.write().then(function() { console.log(&apos;Done building 11ty&apos;); done(); }); }); Do a deep rebuild of Eleventy when a file outside of Eleventy&#x2019;s scope changes or an event trigger is received. gulp.task(&apos;eleventy:reload&apos;, function(done) { elev.restart() elev.write() }); This change works well for us but we&apos;ll of course need to make sure our local cmd.js incorporates any upstream changes (we forked it from Eleventy 0.9.0) Enough talking Here&apos;s some code to try I made a demo repository using this approach that you can: git clone https://github.com/khawkins98/gulp-eleventy-example.git and npm install, or just: Browse &#x1F50E; the demo at github.com/khawkins98/gulp-eleventy-example If you have feedback &#x1F4AC;, I&apos;d love to hear it. Either as an issue or on Twitter @khawkins98 What&apos;s next I&apos;ll likely make an issue on Eleventy about supporting this If that doesn&apos;t get support (or I feel inspired) I may also make an npm gulp-eleventy-example package   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Inside the Content-Action Model  Next: Fractal and Eleventy: Getting static sites closer to the design system  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20191021-integrating-eleventy-with-gulp.html"},
{"id":"29", "title": "Fractal and Eleventy: Getting static sites closer to the design system ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Fractal and Eleventy: Getting static sites closer to the design system 12 Nov 2019 &#xA0;&#xA0;Filed in: gulp, Eleventy, EMBL, Fractal, Visual Framework  What you get out of the box when you use the Visual Framework boilerplate for Eleventy: static site development with a Fractal component library running in the same process. When you update a Fractal component, so does the Eleventy build.  For the Visual Framework 2.0 component system we recommend Eleventy for static sites: Eleventy sites get direct access to component templates with associated metadata and a focused component library.  This combo eases site building by giving developers visibility on Fractal templates and documentation in their particular install. The integration also allows project-level Fractal components that can extend core Sass and re-use component templates, with full access to Fractal {% render %} tags, context data, and other component metadata. Features: Eleventy static sites Fractal components can be npm install-ed Fractal Nunjucks templates and component data Local project-level components and templates can be added, and run in the same Fractal environment Fractal web UI with local instance components, documentation Heard enough? Try it out at visual-framework/vf-eleventy. The two tools don&apos;t work like this by default, but I&apos;ll share how we&apos;ve made it happen. How it feels A 16-second animated-GIF that shows how the Fractal components and Eleventy content are united. Here&apos;s what&apos;s happening: Unified templating: Add a Fractal Nunjucks template to an Eleventy page A unified Eleventy-Fractal watch process: Update a Fractal Nunjucks template and Eleventy rebuilds Assets are also integrated: Update a component&apos;s Sass and gulp asks Eleventy to rebuild How it works For component management of the Visual Framework 2.0, we&#x2019;ve used the Node JS-based Fractal &#x2014; it ticks a lot of boxes for what we needed, including support for Nunjucks templating. That templating allows the Visual Framework component system to stay relatively agnostic of technology. Eleventy is also Node JS-based and can use Nunjucks templating. We were really excited by this in initial discussions as we can use similar build environments and templates across our component library and static-site generator. Here&apos;s a high-level diagram: When the developer runs gulp dev it allows Fractal and Eleventy to run as child process of gulp, sharing a Nunjucks environment. There were a couple of gotchas that we had to work around, if you&apos;re interested in how we got there, read on, otherwise I suggest you just try out the vf-eleventy boilerplate. Making it happen All the same, but not When attempting to achieve our flow, we quickly found issues as we weren&apos;t able to directly use our npm install-ed components in Eleventy for two reasons: Eleventy wants to look in a single place for our templates and we want to individually install components from npm a la: yarn add --dev @visual-framework/vf-button We could work around this by some fancy copy-and-paste task that scans node_modules and copies **/*.njk to the directory used by Eleventy. Unpleasant, but possible. The Nunjucks template syntax isn&#x2019;t exactly the same between the Fractal and Eleventy. The United States Web Design System also uses Fractal and notes: Components that reference other components use a Fractal-specific {% render %} tag that will either need to be implemented in other environments or replaced with the appropriate {% include %} tags. Which means using nested container-level templates &#x2014; like using a logo component inside a page-header template &#x2014; is out, unless you have one set of templates for Fractal and one for generic Nunjucks environments. While replacing render with include might seem trivial at first, there are issues around path lookups and other whack-a-mole issues with other Njk tags. Maintaining two sets of templates adds significant overhead and a large risk for typos and tests, it would also prevent us from being able to yarn add components. But there&apos;s a way to sidestep both of these issues. Playing nice We can avoid both of these by resolving Eleventy&apos;s expectation to run in a separate Node process. Fractal has already prepared a list of all the components (Issue 1) and made available the custom Nunjucks templates (Issue 2), if we can get Eleventy to use (and extend) the same Node process as Fractal&apos;s Nunjucks environment we&apos;ll get all the benefits outlined above. To do this we&#x2019;ve had to make a couple tweaks to how Eleventy executes; here&apos;s a summary: We forked Eleventy&apos;s cmd.js to so we can use it as a child task (i.e. elev.write().then) Gulp triggers the build of Fractal and then Eleventy Utilise Eleventy&#x2019;s watch and refresh commands for local development Send variables to Eleventy&#x2019;s JavaScript data files from Gulp (or other Node JS tasks) I took a deeper look at this approach in a separate blog post. Links Try this out with visual-framework/vf-eleventy How we connect Eleventy with Gulp How we use fractal with vf-core About the Visual Framework 2.0   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Integrating Eleventy with gulp, upstream JS  Next: Building your first page with the Visual Framework 2.0  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20191112-extendeing-fractal-components-eleventy-static-sites.html"},
{"id":"30", "title": "Building your first page with the Visual Framework 2.0 ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Building your first page with the Visual Framework 2.0 18 Nov 2019 &#xA0;&#xA0;Filed in: gulp, Eleventy, EMBL, Fractal, Visual Framework  It&apos;s not hard, it&apos;s just a matter of getting started.  A quick start on how to work with Visual Framework 2.0 CSS, JS and structure your HTML &#x2014; and lots of links to learn more.  The Visual Framework (VF) is designed to help build life science websites and services, this post is a kick-start to building sites with VF CSS, JS and HTML concepts. You&#x2019;ll learn: Part 1: Where to find VF documentation Part 2: Basic methodologies of VF CSS and JS Part 3: How to structure your HTML and CSS classes Part 4: Assorted tips and differences from other major frameworks (like Bootstrap) This post assumes: You are familiar with HTML, CSS and JS You have probably used Bootstrap or Foundation It is helpful to have knowledge of Sass and CSS Custom properties You want to use already-built CSS and JS (To build VF components from their Sass and JS modules see this guide) You may or may not have used the EMBL-EBI Visual Framework 1.0 Part 1 Where to find VF documentation To see demonstrations of each component and the HTML and CSS syntax of all &#x201C;core&#x201D; Visual Framework components, go to the &#x201C;VF 2.0 Component library&#x201D;. Important: your organisation or project may have added custom components or removed some default components, if so you should ask the maintainers of your design system or component library. You can always see which components (and which version) are enabled by viewing the CSS source; from the VF demo component library: /*! * Component: @visual-framework/vf-badge * Version: 1.0.0-beta.8 * Location: components/vf-badge The default VF build will maintain these comments even in the minified CSS build. For higher level information, see the Visual Framework Welcome site. Part 2 CSS and JS methodologies To optimise compatibility and flexibility, the Visual Framework does not target HTML elements like &lt;body&gt; &lt;div&gt; or &lt;button&gt; and instead relies only on CSS classes. Below is an example for a large heading . &lt;h2 vf-text vf-text-heading--3 &gt;This heading size is large&lt;/h2&gt; &lt;span vf-text vf-text-heading--3 &gt;This heading size is large&lt;/span&gt; &lt;link rel= stylesheet href= https://dev.assets.emblstatic.net/vf/v2.0.0-beta.6/css/styles.css &gt; Note the &lt;h2&gt; is irrelevant for the Visual Framework; using &lt;span&gt; works equally well (if semantically a bit daft). &#x1F449; Tip: This approach is similar to CSS Modules. The VF is primarily focused on display and structure and therefore has minimal JS. This also helps if you&#x2019;d like to use, say, Bootstrap for tab behaviour but use the VF look. Similar to our CSS approach, the VF JS never targets HTML elements or even CSS classes and instead uses JS data attributes; for example a partial look at vf-tabs: &lt;div vf-tabs-content data-vf-js-tabs-content&gt; &lt;section vf-tabs__section id= vf-tabs__section--1 &gt; &lt;h2&gt;Section 1&lt;/h2&gt; The Visual Framework uses vf-tabs-content for the visual styling and data-vf-js-tabs-content for the JS &#x2014; exclusively. Use the VF JS where it&#x2019;s helpful, if you don&#x2019;t need it, don&#x2019;t add the data-* and use your own JS. With that in mind, we&#x2019;ll carry on and focus on the CSS. Part 3 The structure of HTML, CSS classes There are a few principles to understand when working with Visual Framework: The grid and HTML nesting The VF makes use of CSS Grid Layout which is quite clever and you should have some basic understanding of how it works, but here are some common tips. By default vf-grid will try to put your content into columns, if you only want one column: &lt;div vf-grid &gt; &lt;div&gt;All child content here&lt;/div&gt; &lt;/div&gt; &lt;div vf-grid &gt; &lt;div&gt;This layout&lt;/div&gt; &lt;div&gt;Makes two columns&lt;/div&gt; &lt;/div&gt; &lt;div vf-grid &gt; &lt;div&gt;All child content here&lt;/div&gt; &lt;/div&gt; &lt;div vf-grid &gt; &lt;div&gt;This layout&lt;/div&gt; &lt;div&gt;Makes two columns&lt;/div&gt; &lt;/div&gt; &lt;link rel= stylesheet href= https://dev.assets.emblstatic.net/vf/v2.0.0-beta.6/css/styles.css &gt; .vf-grid &gt; * { border:1px solid; } .vf-grid { margin-bottom: 1rem } &lt;div vf-grid vf-grid__col-3 &gt; &lt;p&gt;1&lt;/p&gt; &lt;p&gt;1&lt;/p&gt; &lt;p&gt;1&lt;/p&gt; &lt;p&gt;1&lt;/p&gt; &lt;p&gt;1&lt;/p&gt; &lt;p&gt;1&lt;/p&gt; &lt;/div&gt; &lt;link rel= stylesheet href= https://dev.assets.emblstatic.net/vf/v2.0.0-beta.6/css/styles.css &gt; .vf-grid &gt; * { border:1px solid; } .vf-grid { margin-bottom: 1rem } You can specify a set number of columns `vf-grid | vf-grid__col-3`. If you want to make a custom layout &lt;div vf-grid vf-grid__col-3 &gt; &lt;div&gt;I cover 1 of 3&lt;/div&gt; &lt;div vf-grid__col--span-2 &gt;I cover 2 of 3 columns&lt;/div&gt; &lt;/div&gt; &lt;div vf-grid vf-grid__col-3 &gt; &lt;div&gt;I cover 1 of 3&lt;/div&gt; &lt;div vf-grid__col--span-2 &gt;I cover 2 of 3 columns&lt;/div&gt; &lt;/div&gt; &lt;link rel= stylesheet href= https://dev.assets.emblstatic.net/vf/v2.0.0-beta.6/css/styles.css &gt; .vf-grid &gt; * { border:1px solid; } .vf-grid { margin-bottom: 1rem } The grid layout often expects child elements. If something doesn&apos;t look write, you&apos;re probably missing a &lt;div&gt;&lt;/div&gt;. What dashes and underscores mean We namespace all universal components. For Visual Framework core components it is a prefix of vf-. This ensures that the component will not break an existing codebase. Components in the Visual Framework follow the BEM naming convention: .vf-component {} .vf-component__item {} .vf-component--alternative {} Pipes, mixes and chaining CSS classes You may find that a component contains classes from another. This is a &#x201C;BEM mix&#x201D;, it might look like: &lt;header vf-page-header &gt; &lt;h1 vf-page-header__heading | vf-text vf-text--heading-l &gt;Page title&lt;/h1&gt; &lt;/header&gt; Here the vf-page-header is utilising styling from the vf-text component. When mixing classes you&#x2019;ll see the pipe | character as a divider, it has no functional difference but improves the readability. For more, see the guidance on mixes. Fake it until you make it If you&#x2019;ve structured your component correctly but it doesn&#x2019;t quite achieve what you need (and you can&#x2019;t make your own local component) make use of the utility classes; for example: .vf-u-type__text-body--1 .vf-u-display-none .vf-u-background-color--red See all the utility classes. &lt;div vf-button | vf-u-background-color--red &gt;I&apos;m red&lt;/div&gt; &lt;link rel= stylesheet href= https://dev.assets.emblstatic.net/vf/v2.0.0-beta.6/css/styles.css &gt; Use vf-content for content Most projects will have larger areas of text where it is either not technically possible or practical to add many classes. For those situations, wrap the content in a parent element with .vf-content &lt;section vf-content &gt; &lt;h1&gt;My WYSIWYG-made text&lt;/h1&gt; &lt;p&gt;I&apos;m some user-made content with &lt;a href= # &gt;a link&lt;/a&gt;.&lt;/p&gt; &lt;/section&gt; &lt;section vf-content &gt; &lt;h1&gt;My WYSIWYG-made text&lt;/h1&gt; &lt;p&gt;I&apos;m some user-made content with &lt;a href= # &gt;a link&lt;/a&gt; and I&apos;m not using any element-level VF classes.&lt;/p&gt; &lt;/section&gt; &lt;link rel= stylesheet href= https://dev.assets.emblstatic.net/vf/v2.0.0-beta.6/css/styles.css &gt; Part 4 Assorted tips, differences from other frameworks A grab-bag of important things that you might not expect. Visual Framework defers to your other CSS If you have a &lt;section my-local-style vf-tabs &gt; the VF CSS is designed to defer to any CSS you have for section {} and .my-local-style. &lt;ul nav nav-tabs &gt; &lt;li nav-item &gt; &lt;a nav-link active href= # &gt;Active&lt;/a&gt; &lt;/li&gt; &lt;li nav-item &gt; &lt;a nav-link href= # &gt;Bootstrap tabs&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;br/&gt; &lt;div classs= vf-tabs &gt; &lt;ul vf-tabs__list &gt; &lt;li vf-tabs__item &gt; &lt;a vf-tabs__link is-active href= # &gt;Active&lt;/a&gt; &lt;/li&gt; &lt;li vf-tabs__item &gt; &lt;a vf-tabs__link href= # &gt;VF Tabs&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;link href= https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css rel= stylesheet &gt; &lt;link rel= stylesheet href= https://dev.assets.emblstatic.net/vf/v2.0.0-beta.6/css/styles.css &gt; The VF tabs have been contaminated by Bootstrap, but the VF has not impacted Bootstrap tabs. This is by design to avoid breaking existing designs. Tip: loading the VF CSS after your other CSS can affect this, latter-loaded CSS is favoured by the browser. Low specificity We avoid CSS specificity to target styling of elements. This improves flexibility of HTML structure and allows simpler chaining of classes. That is: We do: .vf-tabs-content {} We don&#x2019;t: .vf-tabs .vf-tabs-content {} Highly modular Like most Frameworks, the Visual Framework can be overridden or components can be selectively used. However, the Visual Framework takes this to the next level, allowing selective installation of components and a broad mix of component versions. For your organisation, the Visual Framework core documentation will likely not be the best source of truth on a component&#x2019;s HTML, CSS and JS. So in addition to reading guidance like this, you&#x2019;ll want to consult the maintainer of your CSS and design systems about which versions of Visual Framework components they&#x2019;re using and the best place for documentation on your systems. If you&#x2019;re lost, you can always as the Slack group for help. Atomic Design-like The Visual Framework makes use of Atomic Design-style concepts to define components. Instead of using Atoms, Molecules, Organisms the Visual Framework uses the terms Elements, Blocks, and Containers. For more on blocks, elements and containers, see the CSS guidelines Bonus Just give me a starter template &#x1F4D1; Here&#x2019;s a simple boilerplate so you can see a simple page in action. Stuck? &#x1F388; Ask the Slack group.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Fractal and Eleventy: Getting static sites closer to the design system  Next: Publishing since the 2000s  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20191118-first-page-with-the-visual-framework.html"},
{"id":"31", "title": "Publishing since the 2000s ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Publishing since the 2000s 8 Feb 2020 &#xA0;&#xA0;Filed in: career, reflection  Top-notch web design circa 2001. Thanks to the Wayback Machine miracle, we can enjoy this snapshot of one of my more serious early websites: made for the video company Environmental Media, it had search, Flash video clips and an online shop with a shopping basket and checkout, way back in 2001! Quite a feat for a young me. &#x2014; I really liked that little laptop. Background image of that iBook G4 by Adriam MB.  In a career of 20 years, the more things change the more they stay the same.  Last weekend I stumbled upon a folder of clips from my newspaper work, bringing the realisation it&apos;s been 20 years since my first newspaper gig in January 2000. How different things seem now. It&apos;s hard to not notice the change in technology and speed. Partly that&#x2019;s from moving from infographics for print-focused newspapers (example) to digital publishing. But in print publishing and online, technology changes have been tremendous &#x2014; so much so you&#x2019;d think it was the change. A fabricated bit of Mac OS 7 and Quark nostalgia &#x2014; just like the good ol&apos; days. My daily software in 2000 was Quark 4 on Mac OS 7. I don&#x2019;t think there&apos;s anything about that duo to be nostalgic for, other than for a fragile software environment encouraged you to focus. Or you could use cooperative multitasking that would eat away at your dozens of MBs of RAM and likely bring a reboot. @media print, screen and (min-width: 75em) { .sidebar-figure { max-width: 500px; float: right; margin-right: -8rem; margin-left: 1.5rem; } } You were always one bad PostScript ad placement away from a system lock and losing 30 minutes of work. Fancier things like Quark 5 and Adobe&apos;s InDesign were already shaking things up (did I ever want that optical kerning), but they were too new and simply weren&#x2019;t trusted for our daily production needs and printing and waxing. From a MacWorld column in January 1999: InDesign is that it runs relatively briskly, particularly with long documents on G3 or better machines. Still, I&apos;m the first to admit that InDesign&apos;s recommended system requirements &#x2014; the list includes a G3 processor, OS 8.5 or later, and 128MB of RAM &#x2014; are excessive. (Quark recommends that XPress users have 10MB of RAM.) I would be a bald-faced liar if I didn&apos;t admit that XPress fares better on slower systems. But the topic is typesetting, not performance. And there were still very analogue parts of the workflow, like lifting and pasting ads and copy. .embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; } Waxing nostalgic for the tactile processes: advertisements were physically lifted and pasted across editions and typos from final proofs were cut and arranged away before being sent to the press cameras. Highly nostalgic, but I don&apos;t know that I&apos;d go back. Improving technology brought faster iteration cycles. Particularly in 2008 when I switched from working for newspapers to an online-only publication. Speed and features were everything we needed, at least it felt that way. The siren call of the early web tools Although my years in print publishing until 2008 were filled machine-locking system errors and lifting and re-waxing ads from yesterday&#x2019;s edition, the web had its own horrors waiting behind a veneer of instant publishing. The acronym WYSIWYG still haunts web publishing in 2020. Dreamweaver allowed you to build websites as though they were QuarkXPress documents. A fine idea if the web were a book. For a decade that thought stunted my understanding of the potential of the web. If you designed print documents you know the importance of using your document styles to manage text properties and images, however it was a concept that didn&apos;t really exist for the web until CSS arrived in 1996 &#x2014; it was a while before CSS could truly empower layout. Internet Explorer would dominate. We&apos;d have to wait until the mid-2000s for meaningful CSS innovations to arrive. It was a rough time. Fortunately, I won&#x2019;t have to retell it all, with serendipitous timing, developer Evelyn Woods has written a retrospective on the CSS and the web dating from a similar time period, in part: I&#x2019;ve been taking for granted that most folks doing web stuff still remember those days, or at least the decade that followed, but I think that assumption might be a wee bit out of date. Some time ago I encountered a tweet marvelling at what we had to do without border-radius. I&#x2019;m here to tell all of you to get off my lawn. Here&#x2019;s a history of CSS and web design, as I remember it. New and incredible features were coming all the time (oh how Firebug was magical), but there were so few established best practices and fewer people to get good advice from. And software didn&apos;t always point you in the best direction. Why use code templates and partials? Instead you could use Dreamweaver&apos;s library and export hundreds of pages in Word-like interface! ... It will only be error prone and ridiculously slow. Dreamweaver was a (slow) static site generator before they were the hotness, but it was also a WYSIWYG, FTP client and pretty much everything else. A real jack of all trades. The tools and their developers did their best to fill the gaps, but if I never have to upload a site by FTP again, it will be too soon. I have nostalgia for the process of print publishing, I don&#x2019;t have that for websites of the same period. Sure, there was the novelty of your first few small websites &#x2014; but beyond a few pages, the horrors of WYSIWYG, cgi-bin, proprietary browser features and more lay in wait. Digital was chaos of new-ness, at least print had far more years of processes to learn from. How do we do better? From the early-mid 2000s the tools are vastly better. They amplify our ability to produce far more stuff in 24 hours, but they don&apos;t help us ensure we&apos;re going in the right direction. Producing the right stuff is no easier than it was for the web in 2004 or for print. Thanks to better tools we can take our time savings and refocus on the fundamental and universal hard problem: what are we trying to achieve here? Addendum: it&apos;s not just publishing&apos;s problem The increasing capability of technology has often been helpful and sometimes quite un-helpful. As CDs (and later DVDs) became common they made it easy for software sizes to grow and grow. Dreamweaver 4 was roughly 15 MB in size, while its successor came on a CD and needed 140 MB. From a distribution perspective it&apos;s a reasonable thing to do, but bigger installs meant more space occupied on your computer&apos;s hard drive and more data to be read off a spinning hard drive. Often the convenience of the developer was a slowdown for users. Web publishing saw similarly with the arrival of faster internet speeds, allowing us website makers to spend less time optimising imagery and assets. The point? Increased technical ability allows us to do more, but it also allows a deemphasis on optimisation. Users pay with computers that seem slower and less capable. It costs users by making an internet connection and CPU upgrade feel more critical. And it costs real money on metered data plans. It&apos;s a feeling echoed by the recent re-launch of a famous real-time strategy game, Warcraft 3. I enjoyed playing the other games in the series in the &apos;90s and Warcraft III launched in 2002 with new 3D graphics, a feature I had often avoided in games as early 3D games suffered from issues around camera positioning and poor performance and unpolished graphics. However Warcraft III was implemented well and had a compelling story. It opened me to more 3D games. Fast forward to 2020 and Warcraft III was relaunched in a remastered edition: Warcraft III Reforged. With two decades of improving performance and lessons learned about gaming interfaces, there were many opportunities for a fantastic remaster. But much like the Star Wars prequel trilogy, more technology does not always mean better. Keyboard and mouse controls were not improved and felt more dated as keyboard layouts changed in the passing years, 3D visuals were un-improved looking flat and muddy, popular features removed, and the install size ballooned from 1.3 GB to 23 GB; Ars Technica notes: It&apos;s all but impossible to compare individual 3D models between the old and new versions and state that the older ones are superior. Rather, the issue boils down to how all of these new assets come together on the battlefield. Color saturation sees the terrain&apos;s soup of green and blue blur together, without any recognizable boost to unit or terrain clarity offered by details such as individual blades of grass. The lower-poly version at least made its roads, cobblestone paths, and other game-world clutter more discrete for the sake of instantly recognizable paths and obstacles. And Polygon also notes: Hitting the Esc key doesn&#x2019;t bring up the main settings menu. Instead, I had to hunt for it for a couple of seconds &#x2014; it&#x2019;s mapped to F10. This isn&#x2019;t a big deal, but it&#x2019;s a sign of how the game doesn&#x2019;t seem to have been tested and improved for a modern user experience. As with the web, it&apos;s easy to make software look better while ignoring its technical performance and if we&apos;re actually making something better and solving the right problems. Left unquestioned, technically better can be a distraction from really better.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Building your first page with the Visual Framework 2.0  Next: Moving from Panini to Eleventy  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20200208-its-been-20-years.html"},
{"id":"32", "title": "Privacy policy ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Privacy policy 22 Aug 2018   This site is hosted on GitHub pages, I don&apos;t use any trackers and don&apos;t have access to any server logs. I have no way of knowing who you are or if you&apos;ve read this. Hello, is someone there? If you have a concern: khawkins98@gmail.com    I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/privacy/index.html"},
{"id":"33", "title": "Search ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn     Search  Loading... window.onload = function () { vfSearchClientSide(); };   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/search/index.html"},
{"id":"34", "title": "null ", "text": "null ", "tags": "", "url": "/node/20/20.html"},
{"id":"35", "title": "null ", "text": "null ", "tags": "", "url": "/node/21/21.html"},
{"id":"36", "title": "null ", "text": "null ", "tags": "", "url": "/node/22/22.html"},
{"id":"37", "title": "null ", "text": "null ", "tags": "", "url": "/node/24/24.html"},
{"id":"38", "title": "null ", "text": "null ", "tags": "", "url": "/node/32/32.html"},
{"id":"39", "title": "Moving from Panini to Eleventy ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Moving from Panini to Eleventy 13 Jul 2020 &#xA0;&#xA0;Filed in: static sites, blogging  A 100 percent misleading screenshot, the change to Eleventy has zero requirement on the look of the site. But like the design change, Eleventy has an improved technical design over the older and un-updated Panini.  Back in February 2018, I wrote about updating this site to use a static-site generator by Zurb (makers of the Foundation Framework) called Panini.  In July 2020 I&apos;ve moved the site to the Eleventy static-site generator. Both are based on Node.js and while Eleventy does bring an updated architecture, the truly distinguishing difference is that Panini hasn&apos;t had major development work in two years &#x2014; Eleventy&apos;s development started shortly before that and continues at pace. With the changes Eleventy brings more flexibility. It&apos;s better at importing external data, has more robust templating and generally it has more flexibility and more consistent behaviour (thanks in part to the amount of momentum Eleventy collected). If you want to know what Eleventy can do, look at the docs. The migration was a fairly straightforward affair, changing some template syntax and spending most of my time on the look, content and page performance. But it&apos;s left me with a better platform to do all those things that I likely won&apos;t. So why bother at all? Because I can&apos;t help myself and: Visual Framework and ulterior motives I&apos;ve also moved to Eleventy as it is an officially supported implementation of the Visual Framework 2.0, a highly-componentised front-end framework for life science websites. This is not a life-science website, however it is a good chance to test the flexibility of a framework that I&apos;m personally invested in. Here&apos;s some code If you want to dig deeper on the code: My site on Panini circa 2018 My site on Eleventy circa 2020 Visual Framework boilerplate for Eleventy   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Publishing since the 2000s  Next: Lerna monorepos with fewer tags  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20200713-moving-from-panini-to-eleventy/index.html"},
{"id":"40", "title": "Lerna monorepos with fewer tags ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Lerna monorepos with fewer tags 11 Nov 2020 &#xA0;&#xA0;Filed in: static sites, blogging  It can be hard to get a concise view of what has changed in a monorepo release. Image by Mike Haw.  Getting the perks of monorepo publishing while curating our git tags and release notes.  For the Visual Framework, a front-end component library, we&apos;re developing its 112 npm packages as a monorepo using the tool Lerna. Lerna works out of the box quite well, allowing us to manage all of our components in a single project and easily publishing them to npm. However, the default did two things we didn&apos;t like: Each release created a new tag per updated component and we were on our way to 1,000s of tags in our project. Release notes were not easy to curate and using Conventional Commits didn&apos;t suit our workflow. What we want make one tag for each overall lerna publish release use git to harvest the changes in each CHANGELOG.md to generate release notes as an update on the website How we get it Generate the release notes We run the aliased command yarn run releasenotes that invokes a git dump: git show -U0 --raw $(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))..$(git describe --abbrev=0 --tags $(git rev-list --tags --max-count=1)) --pretty=format:&apos;commit: %H %n abbreviated_commit: %h %n subject: %s %n sanitized_subject_line: %f %n date : %aD %n commiter : %cN %n&apos; --output=tools/vf-component-library/src/site/updates/$(date +%F)-component-updates.md -- **/CHANGELOG.md I&apos;ll walk through that chunk of code: Show the raw git history: git show -U0 --raw Since the most recent tag: $(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))..$(git describe --abbrev=0 --tags $(git rev-list --tags --max-count=1)) In this format: --pretty=format:&apos;commit: %H %n abbreviated_commit: %h %n subject: %s %n sanitized_subject_line: %f %n date : %aD %n commiter : %cN %n&apos; Add a new post file to the updates directory: --output=tools/vf-component-library/src/site/updates/$(date +%F)-component-updates.md Add the diff from any CHANGELOG.md changes: -- **/CHANGELOG.md That still leaves us to add on the frontmatter and massage the content, but with the help of a macro it&apos;s a pretty quick task: {% macro notes(component=&apos;vf-xxx&apos;, componentVersion=&apos;9.9.9&apos;, commitId=&apos;0123456789&apos;) %} ### [{{component}}](https://visual-framework.github.io/vf-core/components/{{component}}/) - &lt;span vf-badge &gt;{{ componentVersion }}&lt;/span&gt; - &lt;a href= https://www.npmjs.com/package/@visual-framework/{{component}}/v/{{componentVersion}} vf-badge &gt;npm&lt;/a&gt; - &lt;a href= https://github.com/visual-framework/vf-core/commit/{{commitId}} vf-badge &gt;git diff&lt;/a&gt; {% endmacro %} Here&apos;s an example release notes update and its 11ty source code. Make a reference git tag for Lerna Run Lerna publish and skip git tags: lerna publish --no-git-tag-version --no-push Lerna publishes to npm and does cross-dependency updates to each component&apos;s package.json. Commit the package.json updates to our main git branch Create a manual tag git tag -a v2.3.whatever -m &apos;Combined snapshot of packages&apos; Push our new tag git push origin --tags Now running lerna changed shows the expected No changed packages . It works well for us To be clear, we don&apos;t think there is anything wrong with Lerna&apos;s default publishing flow, however it didn&apos;t suit our needs. This is an alternative approach.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Moving from Panini to Eleventy  Next: Using Nunjucks templates with React  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20201111-using-lerna-with-fewer-tags-and-custom-release-notes/index.html"},
{"id":"41", "title": "Using Nunjucks templates with React ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Using Nunjucks templates with React 12 Dec 2020 &#xA0;&#xA0;Filed in: component systems  Entering the React wrapper. Thanks to Honza Soukup for the CC licnesed photo.  A lightweight React wrapper with precompiled Nunjucks  For Visual Framework component&apos;s we&#x2019;re using the Nunjucks JavaScript templating engine. It&apos;s a JS-runtime and based off jinja2. Here&#x2019;s a simplified vf-button.njk template: &lt;a href= {{ button_href }} vf-button {%- if variant %} vf-button--{{ variant }}{% endif %} &gt; {{- text | safe -}} &lt;/a&gt; If you&apos;ve used jinja2, Handlebars or Twig templating, you&apos;ll probably find Nunjucks familiar. But what to do when we want to use our nice Nunjucks template in React? It&#x2019;s all just JS, right? Requirements Use our *.precompiled.js templates so we don&#x2019;t have to maintain a second set of templates for React. Or with minimal changes. Compatible with a non-ejected Create React App. CRA limits you by not allowing customisation to the webpack config and has some other restricitions for consistency. Minimal local project changes and code. A &#x201C;JS callback to support client-side JS for basic UI elements like tabs. Much as you would for integrating jQuery. Conceivably reusable in Angular. Bonus points for using React memo components. Step 1: Precompiling nunjukcs While you don&#x2019;t have to precompile your Nunjucks templates to use them in other systems, doing so will make them portable, faster and require a smaller JS runtime (8KB vs 20KB) This is is fairly standard business for Nunjucks and we&#x2019;ve already been doing it as part of the Visual Framework npm distributable. For more you can follow the Nunjucks guide on precompiling. Step 2: Common assets To use our Nunjucks templates in react we&#x2019;ll need two dependencies: The nunjucks-slim.js runtime. It&#x2019;s 8KB. We&apos;ll need some extra help implement React&apos;s fragments to avoid extanious divs, so we&apos;ve added react-dom-fragment. To deliver and somre reusable central logic, we made a small npm package: vf-extensions-react. Step 3: Template wrappers and callback We&apos;re aiming for a simple React integration and usage process. Install the npm dependencies Import the template import { VfButton } from @visual-framework/vf-button/vf-button.react.js ; Use &lt;VfButton href= #mylink variant= big title= React for the VF 2.0 /&gt; Do any needed JS callback for tabs, or similar To facilitate this, each Visual Framework component will need a small template wrapper in the monorepo; here&apos;s components/vf-button/vf-button.react.js: // vf-button for React // See vf-extensions-react for usage guidance // We use vanilla JS templates for react for compatibility with create react app // --- import React from react ; import Fragment from react-dom-fragment ; import VfButtonTemplate from ./vf-button.precompiled.js ; // import templates before the nunjucks env import { vfNunjucksEnv } from @visual-framework/vf-extensions-react/vf-extensions-react.js ; // any JS actions needed on component insertion class VfButtonCallback extends React.Component { componentDidMount() { // console.log( any JS actions needed ); } render() { return React.createElement(React.Fragment, null); } } const VfButton = React.memo(({ text, button_href, theme }) =&gt; { return React.createElement(React.Fragment, null, React.createElement(Fragment, { dangerouslySetInnerHTML: { // our HTML is handled by nunjucks, this should not receive user input __html: vfNunjucksEnv.render( vf-button , { text: text, button_href: button_href, theme: theme }) } }), React.createElement(VfButtonCallback, null) ); } ); export { VfButton }; Most of this code is from a template and we only need: pass any context properties (href, text, variant, etc) add any JS callbacks Step 4: demo Install the requirements: yarn add @visual-framework/vf-extensions-react @visual-framework/vf-button And here&#x2019;s a usage example in a React template: import { VfButton } from @visual-framework/vf-button/vf-button.react.js &lt;VfButton href= #mylink variant= big title= React for the VF 2.0 /&gt; You can see all this in action in the Visual Framework&#x2019;s example React app: Project code Demo site Notes, caveats nunjucks-loader: an interesting looking project that has some additional Nunjucks features. However it could require additional configuration to the webpack.config.js, which would make usage with Create React App very hard. Similarly we&apos;er not using Webpack to integrate our Nunjucks templates User input: currently not supported. We plan to use dompurify. Client-side JavaScript: we know that for things like tabs we won&#x2019;t be doing JavaScript in the true React way, however we&#x2019;re mainly interested in content templates (cards, buttons, intros, heroes and other containers/patterns). We accept that for any high-performance DOM-updating element it should be written as a &#x201C;native React component. Realted discussion, projects in the Visual Framework: vf-react, demo vf-extensions-react/README.md Issue: a basic how-to on integrating VF JavaScript into React #1271   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Lerna monorepos with fewer tags  Next: Something new for 2022  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20201212-using-nunjucks-with-react/index.html"},
{"id":"42", "title": "Something new for 2022 ", "text": " AllAboutKen.com  Blog   E-mail   khawkins98@gmail.com   Twitter @khawkins98   LinkedIn   Something new for 2022 23 Dec 2021 &#xA0;&#xA0;Filed in: life  Leaving Heidelberg on moving onto Bonn, and so much more. Own photo.  This month, I&#x2019;m saying goodbye to my projects at EMBL but my career in web work continues.  Of all the projects I&#x2019;ve led at EMBL, I&#x2019;ll be saddest to say goodbye to the Visual Framework. During my time, I managed to get a lot of organisation support for the Visual Framework, but I never managed to get the organisation really excited for it nor did I get it cemented as one of EMBL&#x2019;s permanent and public-facing services (or tools depending on your EMBL world view). I&#x2019;m still hopeful that whoever steps into my shoes as the project owner will be able to achieve those things and carry the vision forward, but it&#x2019;s a tall order; that person needs to: carry forward the project, fully grasp the problem space, share a similar vision of the solution as mine, and be willing to continue organisational culture change It&#x2019;s far from impossible, but I suspect the most likely outcome is that the next person will view the Visual Framework in a more limited role that supports only EMBL&#x2019;s needs and not be flexible enough to empower virtually any life science project. A simpler view of the Visual Framework creates a much simpler problem space and accordingly requires fewer resources to implement &#x2014; but it also greatly limits potential, muting its ability to be flexible enough to be used by all of EMBL&#x2019;s many online collaborations. Time will tell. (If you&apos;re looking for a interesting design systems project, watch their openings.) I&#x2019;ve already written plenty on why the Visual Framework&#x2019;s open approach is important, so I won&#x2019;t digress again. Instead, I want to think a bit more broadly reflect a little on closing a 6.5-year chapter in my career. During my time at EMBL I&#x2019;ve worked with some truly great colleagues who were not only smart and supportive, but they gave me a wide amount of trust to help deliver my ideas. I&apos;ll miss that most. In January, I&#x2019;ll start my new position and can only hope that my new colleagues will be as tremendous as those EMBL colleagues were. While the exact aspects of my work will change, I expect it to still be broadly the same: helping ensure web sites deliver value. It&apos;s been pointed out to me a few times that I should spend less time going hands on and more time leading &#x2014; I&apos;m really going to try to set out by not just doing and ensuring I&apos;m demonstrating. But a lot will depend on what needs I actually encounter when I start. I&#x2019;m excited about the new opportunity and also anxious. We&#x2019;ll be relocating as a family, and that means lots of uncertainties &#x2026; what will the work be like? How will my colleagues be? How are the playgrounds? The apartment? Kindergarten? What exactly are the needs I&apos;ll be addressing for work? Change is stressful. All told, I&#x2019;d have happily stayed at EMBL for many more years, but there&#x2019;s a 9-year cap to the vast majority of EMBL staff. So at some point, my current opportunity would end, and I&#x2019;d have to find something that would sponsor me to stay in Germany. I don&apos;t think I could have found a better future position that matches my career interests, is supportive of family life and works for a common good. Between being a parent of a now 4-year-old and providing leadership for a number of projects, I&apos;m also hopeful that a new role will give me a bit of time to focus on side projects a bit more. Writing this I&apos;m noticing it&apos;s been just over 1 year since my last blog entry. It&#x2019;s probably a good time for a change. After several years of applying myself to a problem, the Visual Framework solves the majority of problems it aims to address. It&#x2019;s a mature system that needs someone to maintain the status quo, and I think I&#x2019;m ready to solve some new challenges. Let&apos;s hope 2022 will be a bright year in all the right ways.   Comment?  Thanks for reading, if you have comment I&apos;d love to hear it.  Twitter @khawkins98 &#xA0; LinkedIn &#xA0; khawkins98@gmail.com   Read more  Previously: Using Nunjucks templates with React  &#x21E4; Blog index   I&apos;m Ken Hawkins I bring structure and process to complex web projects. Learn more about me on the front page or get in touch. About this site&apos;s technology &#xA0; Curious about privacy? Printed direct from AllAboutKen.com  ", "tags": "", "url": "/posts/20211223-something-new-2022/index.html"},
]};